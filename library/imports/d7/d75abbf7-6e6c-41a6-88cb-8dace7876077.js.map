{"version":3,"sources":["assets/src/framework/message/EventDispath.ts"],"names":[],"mappings":";;;;;;AAAA,+CAA0C;AAQ1C;IAII;QAFA,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QAEX,IAAI,CAAC,kBAAkB,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;IAC5C,CAAC;IAGa,wBAAW,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAE,CAAC;SACvC;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,uCAAgB,GAAhB,UAAiB,IAAY,EAAE,QAA+B,EAAE,MAAM;QAClE,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACvD,CAAC;IAED,2BAAI,GAAJ,UAAK,OAAO,EAAE,IAAU;QACpB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,oCAAa,GAAb,UAAc,IAAY,EAAE,QAA+B,EAAE,MAAM;QAC/D,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;IAED,2CAAoB,GAApB,UAAqB,MAAM;QACvB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACvB,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACjC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aAC5B;SACJ;IACL,CAAC;IACD;;;;;;;;;OASG;IACH,yBAAE,GAAF,UAAG,GAAY,EAAE,QAA+B,EAAE,OAAO,EAAE,SAAe,EAAE,QAAe,EAAE,UAAc,EAAE,IAAU,EAAE,MAAe,EAAE,MAAe;QAA9F,0BAAA,EAAA,eAAe;QAAE,yBAAA,EAAA,eAAe;QAAE,2BAAA,EAAA,cAAc;QACvG,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,GAAG,GAAG,CAAA;SACb;QAED,IAAI,SAAS,GAAG,GAAG,CAAC,MAAM,CAAA;QAC1B,IAAI,SAAS,GAAG,GAAG,CAAC,MAAM,CAAA;QAE1B,IAAI,MAAM,EAAE;YACR,SAAS,GAAG,MAAM,CAAC;SACtB;QAED,IAAI,MAAM,EAAE;YACR,SAAS,GAAG,MAAM,CAAC;SACtB;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;SAC/B;QACD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEjC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,UAAU,CAAC;YAC7C,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAAE,OAAO;YAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,kBAAQ,CAAC,eAAe,EAAE,CAAC;YAC3B,IAAI,QAAQ;gBAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,GAAG,GAAG,EAAE,SAAS,GAAG,GAAG,CAAC,CAAC,CAAA;YAC/E,8CAA8C;YAC9C,IAAI,QAAQ,IAAI,UAAU,IAAI,CAAC;gBAAE,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC/D,CAAC,EAAE,OAAO,CAAC,CAAA;QAEX,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,UAAU,CAAC;YAC3C,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAAE,OAAO;YAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,QAAQ,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC,EAAE,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC;oBACnG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC,CAAC,CAAA;aACP;iBAAM;gBACH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAEjC;YACD,sCAAsC;YACtC,IAAI,QAAQ,IAAI,UAAU,IAAI,CAAC,EAAE;gBAC7B,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;aAC7B;QACL,CAAC,EAAE,OAAO,CAAC,CAAA;QAEX,wDAAwD;QACxD,4DAA4D;QAC5D,qEAAqE;QACrE,6CAA6C;QAC7C,cAAc;IAClB,CAAC;IAEL,mBAAC;AAAD,CAtGA,AAsGC,IAAA;AACD,kBAAe,YAAY,CAAC,WAAW,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import JSHelper from \"../helper/JSHelper\";\r\nimport MKUtils from \"../tools/MkUtils\";\r\n\r\nexport interface touchEventCfg {\r\n    thisObject: any,\r\n    nodeList: cc.Node[]\r\n}\r\n\r\nclass EventDispath {\r\n    NotificationCenter: cc.Node;\r\n    nodeList = {};\r\n    touchList = {};\r\n    constructor() {\r\n        this.NotificationCenter = new cc.Node();\r\n    }\r\n    public static singleton: EventDispath;\r\n\r\n    public static getInstance(): EventDispath {\r\n        if (!this.singleton) {\r\n            this.singleton = new EventDispath();\r\n        }\r\n        return this.singleton;\r\n    }\r\n\r\n    addEventListener(type: string, callback: (notice: any) => void, target) {\r\n        this.NotificationCenter.on(type, callback, target);\r\n    }\r\n\r\n    send(eventID, arg1?: any) {\r\n        this.NotificationCenter.emit(eventID, arg1);\r\n    }\r\n\r\n    removeByEvent(type: string, callback: (notice: any) => void, target) {\r\n        this.NotificationCenter.off(type, callback, target);\r\n    }\r\n\r\n    removeEventListeners(target) {\r\n        this.NotificationCenter.targetOff(target);\r\n        if (this.nodeList[target]) {\r\n            let arr = this.nodeList[target];\r\n            for (let i = 0; i < arr.length; i++) {\r\n                arr[i].targetOff(target);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 按钮点击缩放\r\n     * @param btn 触摸的node\r\n     * @param callback 点击回调\r\n     * @param thisObj 作用域\r\n     * @param touchIndex 触发时机，1开始时，2结束时\r\n     * @param icon 缩放效果node\r\n     * @param scaleX \r\n     * @param scaleY \r\n     */\r\n    on(btn: cc.Node, callback: (notice: any) => void, thisObj, delayTime = 0.5, isAction = true, touchIndex = 2, icon?: any, scaleX?: number, scaleY?: number) {\r\n        if (!icon) {\r\n            icon = btn\r\n        }\r\n\r\n        let preScaleX = btn.scaleX\r\n        let preScaleY = btn.scaleY\r\n\r\n        if (scaleX) {\r\n            preScaleX = scaleX;\r\n        }\r\n\r\n        if (scaleY) {\r\n            preScaleY = scaleY;\r\n        }\r\n        if (!this.nodeList[thisObj]) {\r\n            this.nodeList[thisObj] = [];\r\n        }\r\n        this.nodeList[thisObj].push(btn);\r\n\r\n        this.touchList[btn.uuid] = 0;\r\n        let self = this;\r\n        btn.on(cc.Node.EventType.TOUCH_START, function (e) {\r\n            if (self.touchList[icon.uuid] != 0) return;\r\n            self.touchList[icon.uuid] = 1;\r\n            JSHelper.playClickEffect();\r\n            if (isAction) icon.runAction(cc.scaleTo(0.1, preScaleX * 1.1, preScaleY * 1.1))\r\n            // icon.setScale(preScaleX*1.1, preScaleY*1.1)\r\n            if (callback && touchIndex == 1) callback.call(thisObj, e);\r\n        }, thisObj)\r\n\r\n        btn.on(cc.Node.EventType.TOUCH_END, function (e) {\r\n            if (self.touchList[icon.uuid] == 2) return;\r\n            self.touchList[icon.uuid] = 2;\r\n            if (isAction) {\r\n                icon.runAction(cc.sequence(cc.scaleTo(0.1, preScaleX, preScaleY), cc.delayTime(delayTime), cc.callFunc(() => {\r\n                    self.touchList[icon.uuid] = 0;\r\n                })))\r\n            } else {\r\n                self.touchList[icon.uuid] = 0;\r\n\r\n            }\r\n            // icon.setScale(preScaleX, preScaleY)\r\n            if (callback && touchIndex == 2) {\r\n                callback.call(thisObj, e);\r\n            }\r\n        }, thisObj)\r\n\r\n        // btn.on(cc.Node.EventType.TOUCH_CANCEL, function (e) {\r\n        //     icon.runAction(cc.scaleTo(0.2, preScaleX, preScaleY))\r\n        //     // if (callback && touchIndex == 2) callback.call(thisObj, e);\r\n        //     // icon.setScale(preScaleX, preScaleY)\r\n        // }, thisObj)\r\n    }\r\n\r\n}\r\nexport default EventDispath.getInstance();"]}