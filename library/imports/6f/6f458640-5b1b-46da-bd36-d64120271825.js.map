{"version":3,"sources":["assets/src/game/consts/LoaderType.ts"],"names":[],"mappings":";;;;;;;AAAA,uEAAkF;AAClF,IAAY,UAIX;AAJD,WAAY,UAAU;IAClB,qCAAuB,CAAA;IACvB,iCAAmB,CAAA;AAEvB,CAAC,EAJW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAIrB;AACD;IAAA;IA2CA,CAAC;IA9BG,uCAAuC;IAChC,qBAAU,GAAjB;QACI,IAAI,GAAG,CAAC;QACR,QAAQ;QACR,KAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EACvB;YACI,uBAAa,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SACpD;QAED,UAAU;QACV,KAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAC;YACrB,uBAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;SACrD;QAED,QAAQ;QACR,uBAAa,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAE/C,CAAC;IAED;;OAEG;IACI,sBAAW,GAAlB,UAAmB,IAAI;QAEnB,IAAI,CAAC,CAAC,IAAI,EAAE;YACR,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACnC,uBAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACvC;IAEL,CAAC;IAzCM,gBAAK,GAAY,SAAS,CAAC;IAC3B,mBAAQ,GAAG;QACd,WAAW,EAAC,EAAC,KAAK,EAAC,WAAW,EAAC,GAAG,EAAC,gBAAgB,EAAC,SAAS,EAAC,KAAK,EAAC;QACpE,SAAS,EAAC,EAAC,KAAK,EAAC,SAAS,EAAC,GAAG,EAAC,mBAAmB,EAAC,SAAS,EAAC,KAAK,EAAC;KACtE,CAAA;IAEM,kBAAO,GAAG;QACb,QAAQ,EAAC,EAAC,KAAK,EAAC,UAAU,EAAC,GAAG,EAAC,aAAa,EAAC,SAAS,EAAC,IAAI,EAAC;KAC/D,CAAA;IAEM,iBAAM,GAAG,EAAC,KAAK,EAAC,QAAQ,EAAC,GAAG,EAAC,QAAQ,EAAC,SAAS,EAAC,IAAI,EAAC,CAAA;IAgChE,iBAAC;CA3CD,AA2CC,IAAA;kBA3CoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import LoaderManager, { moduleData } from \"../../framework/manager/LoaderManager\";\r\nexport enum ModuleType {\r\n    commonRes = \"commonRes\",\r\n    gameRes = 'gameRes',\r\n    \r\n}\r\nexport default class LoaderType {\r\n    static UIURL :string =  \"prefab/\";\r\n    static textures = {\r\n        'commonRes':{mname:'commonRes',url:'texture/common',isRelease:false},\r\n        'gameRes':{mname:'gameRes',url:'texture/itemIcon1',isRelease:false},\r\n    }\r\n    \r\n    static prefabs = {\r\n        itemIcon:{mname:'itemIcon',url:'prefab/main',isRelease:true},\r\n    }\r\n\r\n    static config = {mname:'config',url:'config',isRelease:true}\r\n\r\n    //命名规则 texture 统一 用 res 当后缀，prefab无特殊后缀\r\n    static initConfig(){\r\n        let key;\r\n        //prefab\r\n        for(key in this.prefabs)\r\n        {\r\n            LoaderManager.setModuleConfig(this.prefabs[key]);\r\n        }\r\n\r\n        //textures\r\n        for(key in this.textures){\r\n            LoaderManager.setModuleConfig(this.textures[key]);\r\n        }\r\n\r\n        //config\r\n        LoaderManager.setModuleConfig(this.config);\r\n\r\n    }\r\n\r\n    /**\r\n     * 添加UI加载模块\r\n     */\r\n    static addUIModule(data)\r\n    {\r\n        if (!!data) {\r\n            data.url = this.UIURL + data.mname;\r\n            LoaderManager.setModuleConfig(data);\r\n        }\r\n        \r\n    }\r\n}"]}