{"version":3,"sources":["assets/src/game/consts/LoaderType.ts"],"names":[],"mappings":";;;;;;;AAAA,uEAAkF;AAClF,IAAY,UAEX;AAFD,WAAY,UAAU;IAClB,qCAAuB,CAAA;AAC3B,CAAC,EAFW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAErB;AACD;IAAA;IAwCA,CAAC;IA5BG,uCAAuC;IAChC,qBAAU,GAAjB;QACI,IAAI,GAAG,CAAC;QACR,QAAQ;QACR,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YACtB,uBAAa,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SACpD;QAED,UAAU;QACV,KAAK,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE;YACvB,uBAAa,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;SACrD;QAED,QAAQ;QACR,uBAAa,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAE/C,CAAC;IAED;;OAEG;IACI,sBAAW,GAAlB,UAAmB,IAAI;QACnB,IAAI,CAAC,CAAC,IAAI,EAAE;YACR,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACnC,uBAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SACvC;IAEL,CAAC;IAtCM,gBAAK,GAAW,SAAS,CAAC;IAC1B,mBAAQ,GAAG;QACd,WAAW,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,gBAAgB,EAAE,SAAS,EAAE,KAAK,EAAE;KAC5E,CAAA;IAEM,kBAAO,GAAG;QACb,QAAQ,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE;KAChE,CAAA;IAEM,iBAAM,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,CAAA;IA8BvE,iBAAC;CAxCD,AAwCC,IAAA;kBAxCoB,UAAU","file":"","sourceRoot":"/","sourcesContent":["import LoaderManager, { moduleData } from \"../../framework/manager/LoaderManager\";\nexport enum ModuleType {\n    commonRes = \"commonRes\",\n}\nexport default class LoaderType {\n    static UIURL: string = \"prefab/\";\n    static textures = {\n        'commonRes': { mname: 'common', url: 'texture/common', isRelease: false },\n    }\n\n    static prefabs = {\n        itemIcon: { mname: 'itemIcon', url: 'main', isRelease: true },\n    }\n\n    static config = { mname: 'config', url: 'config', isRelease: true }\n\n    //命名规则 texture 统一 用 res 当后缀，prefab无特殊后缀\n    static initConfig() {\n        let key;\n        //prefab\n        for (key in this.prefabs) {\n            LoaderManager.setModuleConfig(this.prefabs[key]);\n        }\n\n        //textures\n        for (key in this.textures) {\n            LoaderManager.setModuleConfig(this.textures[key]);\n        }\n\n        //config\n        LoaderManager.setModuleConfig(this.config);\n\n    }\n\n    /**\n     * 添加UI加载模块\n     */\n    static addUIModule(data) {\n        if (!!data) {\n            data.url = this.UIURL + data.mname;\n            LoaderManager.setModuleConfig(data);\n        }\n\n    }\n}"]}