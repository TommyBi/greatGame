{"version":3,"sources":["assets/src/game/Barrage/BarragePrefab.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import DataManager from \"../../framework/manager/DataManager\";\r\nimport MKUtils from \"../../framework/tools/MkUtils\";\r\nimport Utils from \"../../framework/tools/Utils\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BarragePrefab extends cc.Component {\r\n\r\n    @property(cc.Sprite)\r\n    headIcon: cc.Sprite = null;\r\n    @property(cc.Label)\r\n    nameLabel: cc.Label = null;\r\n    @property(cc.Label)\r\n    moneyLabel: cc.Label = null;\r\n    @property(cc.Label)\r\n    descLb1: cc.Label = null;\r\n    @property(cc.Label)\r\n    descLb2: cc.Label = null;\r\n    @property(cc.Node)\r\n    bg: cc.Node = null;\r\n    @property(cc.RichText)\r\n    tipsLb: cc.RichText = null;\r\n\r\n    onLoad() {\r\n        // this.node.pauseSystemEvents(true);\r\n        // let bg = this.node.getChildByName(\"mbg\");\r\n        // bg.pauseSystemEvents(true);\r\n        // this.tipsLb.node.pauseSystemEvents(true);\r\n    }\r\n    setData() {\r\n        let barrageData = DataManager.getJson(\"barrage\");\r\n        let data = barrageData[DataManager._barrageIndex];\r\n\r\n        DataManager._barrageIndex++;\r\n        if (DataManager._barrageIndex > barrageData.length) {\r\n            DataManager._barrageIndex = 1;\r\n        }\r\n\r\n        // this.nameLabel.string = data[\"name\"];\r\n        // this.moneyLabel.string = data[\"money\"] + \"元\";\r\n\r\n        let num = Utils.getRandomNum(0, 110);\r\n        let date = 0;\r\n        let money = 0;\r\n        if (num <= 5) {\r\n            date = 10;\r\n        } else if (num <= 15) {\r\n            date = 5;\r\n        } else if (num <= 30) {\r\n            money = MKUtils.randomNMF(3, 5);\r\n        } else if (num < 55) {\r\n            money = MKUtils.randomNMF(1, 3);\r\n        } else if (num <= 85) {\r\n            money = MKUtils.randomNMF(0.5, 1);\r\n        } else if (num > 85) {\r\n            money = MKUtils.randomNMF(0.3, 0.5);\r\n        }\r\n\r\n        if (date != 0) {\r\n            this.bg.width = 672;\r\n            this.tipsLb.string = `<color=#000000>恭喜</c><color=#ff0000>${data[\"name\"]}</c><color=#000000>成功将红包提现比例升至<color=#ff0000>${date}%</color>`;\r\n        } else {\r\n            this.bg.width = 480;\r\n            this.tipsLb.string = `<color=#000000>恭喜</c><color=#ff0000>${data[\"name\"]}</c><color=#000000>成功提现<color=#ff0000>${money.toFixed(2)}</c><color=#000000>元</color>`;\r\n        }\r\n\r\n\r\n        // MKUtils.loadSpriteFrame(\"texture/barrage/\" + data[\"headshot\"], function (spriteFrame) {  //\r\n        //     if (spriteFrame) this.headIcon.spriteFrame = spriteFrame;\r\n        // }.bind(this))\r\n    }\r\n\r\n    // private _eventManager = cc[\"internal\"][\"eventManager\"];\r\n    // private _touchListener: any;\r\n    // InitTouch() {\r\n    //     const EventListener = cc[\"EventListener\"];\r\n    //     this._touchListener = EventListener.create({\r\n    //         event: EventListener.TOUCH_ONE_BY_ONE,\r\n    //         swallowTouches: false,//是否吞噬touch事件\r\n    //         owner: this.bg,\r\n    //         mask: null,\r\n    //         onTouchBegan: this.onTouchStart.bind(this),\r\n    //         onTouchMoved: null,\r\n    //         onTouchEnded: this.onTouchEnded.bind(this),\r\n    //         onTouchCancelled: null,\r\n    //     });\r\n    //     this._eventManager.addListener(this._touchListener, this.bg);\r\n    // }\r\n\r\n    // private onTouchStart(touch: cc.Touch, event: cc.Event.EventTouch): boolean {\r\n    //     cc.log(\"touch start\");\r\n    //     //此处必须返回true（表示接触到了节点）,否则TOUCH_MOVE,TOUCH_END,TOUCH_CANCEL不触发。\r\n    //     return true;\r\n    // }\r\n    // private onTouchEnded(touch: cc.Touch, event: cc.Event.EventTouch): void {\r\n    //     cc.log(\"touch end\");\r\n    //     // this.ClickCall(touch);\r\n    // }\r\n    // protected onDestroy(): void {\r\n    //     // super.onDestroy();\r\n    //     this._eventManager.removeListener(this._touchListener, this.node);\r\n    // }\r\n}\r\n"]}