{"version":3,"sources":["assets/src/game/manager/EffectManager.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAuD;AACvD,qEAAgE;AAChE,+DAA8D;AAC9D,yDAAoD;AAEpD;IAGI;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAEM,sBAAQ,GAAf;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YAEjB,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;SACxC;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAE1B,CAAC;IAEO,4BAAI,GAAZ;IAEA,CAAC;IACD,MAAM;IACN,mCAAW,GAAX,UAAY,QAAiB,EAAE,QAAY,EAAE,QAAY,EAAE,KAAc,EAAE,EAAmB;QAA/D,yBAAA,EAAA,YAAY;QAAE,yBAAA,EAAA,YAAY;QAAkB,mBAAA,EAAA,SAAmB;QAC1F,IAAI,CAAC,KAAK,EAAE;YACR,KAAK,GAAG,EAAE,CAAC;SACd;QACD,kBAAQ,CAAC,UAAU,CAAC,eAAe,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAClD,IAAI,GAAG,GAAG,CAAC,CAAC;gCACH,KAAK;YACV,IAAI,aAAa,GAAG,UAAU,CAAA;YAC9B,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACf,aAAa,GAAG,SAAS,CAAA;aAC5B;iBAAM,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACtB,aAAa,GAAG,QAAQ,CAAA;aAE3B;YACD,IAAI,SAAS,GAAY,iBAAO,CAAC,cAAc,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,aAAa,CAAC,CAAA;YACtF,IAAI,SAAS,EAAE;gBACX,IAAI,MAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAA;gBACxB,IAAI,QAAM,GAAG,MAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;gBAEzC,IAAI,MAAM,GAAG,2BAA2B,CAAA;gBACxC,IAAI,QAAQ,IAAI,CAAC,EAAE;oBACf,MAAM,GAAG,0BAA0B,CAAA;iBACtC;qBAAM,IAAI,QAAQ,IAAI,CAAC,EAAE;oBACtB,MAAM,GAAG,yBAAyB,CAAA;iBAErC;gBACD,iBAAO,CAAC,eAAe,CAAC,MAAM,EAAE,UAAU,WAAW;oBACjD,QAAM,CAAC,WAAW,GAAG,WAAW,CAAA;oBAChC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,MAAI,EAAE,GAAG,CAAC,CAAA;oBAC1C,MAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;oBAE1B,IAAI,KAAK,GAAG,iBAAO,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;oBACvC,MAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;oBAEpB,IAAI,WAAW,GAAG,SAAS,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBAC9D,IAAI,UAAU,GAAG,WAAW,CAAA;oBAC5B,IAAI,GAAG,GAAG,iBAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAI,CAAC,WAAW,EAAE,CAAC,CAAA;oBAClE,IAAI,QAAQ,IAAI,CAAC,EAAE;wBACf,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACtC,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACtC,IAAI,KAAK,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACvC,IAAI,KAAK,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACvC,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,EAAE,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,GAAG,KAAK,EAAE,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;wBAC1H,MAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CACtB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACpD,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EACjB,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACtD,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EACpB,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAClB,EAAE,CAAC,QAAQ,CAAC;4BACR,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE;gCACpB,EAAE,IAAI,EAAE,EAAE,CAAC;gCACX,sBAAY,CAAC,IAAI,CAAC,qBAAS,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;6BACvD;wBACL,CAAC,CAAC,EACF,EAAE,CAAC,WAAW,EAAE,CACnB,CAAC,CAAA;qBACL;yBAAM;wBACH,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACtC,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACtC,GAAG,EAAE,CAAC;wBACN,IAAI,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;wBACjC,MAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CACtB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACzD,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,EACvB,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACzD,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EACpB,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAClB,EAAE,CAAC,QAAQ,CAAC;4BACR,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE;gCACpB,EAAE,IAAI,EAAE,EAAE,CAAC;gCACX,IAAI,QAAQ,IAAI,CAAC;oCAAE,sBAAY,CAAC,IAAI,CAAC,qBAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;;oCACjE,sBAAY,CAAC,IAAI,CAAC,qBAAS,CAAC,mBAAmB,CAAC,CAAC;6BACzD;wBACL,CAAC,CAAC,EACF,EAAE,CAAC,WAAW,EAAE,CACnB,CAAC,CAAA;qBACL;gBACL,CAAC,CAAC,IAAI,QAAM,CAAC,CAAA;aAChB;;;QAzEL,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE;oBAAjC,KAAK;SA0Eb;IACL,CAAC;IACL,oBAAC;AAAD,CAtGA,AAsGC,IAAA;AAED,kBAAe,aAAa,CAAC,QAAQ,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import JSHelper from \"../../framework/helper/JSHelper\";\nimport EventDispath from \"../../framework/message/EventDispath\";\nimport { EventType } from \"../../framework/message/EventType\";\nimport MKUtils from \"../../framework/tools/MkUtils\";\n\nclass EffectManager {\n    private static _instance: EffectManager;\n\n    constructor() {\n        this.init();\n    }\n\n    static instance() {\n        if (!this._instance) {\n\n            this._instance = new EffectManager();\n        }\n        return this._instance;\n\n    }\n\n    private init() {\n\n    }\n    // 飞金币\n    playCoinFly(startPos: cc.Vec2, coinType = 1, moneyNum = 0, count?: number, cb: Function = null) {\n        if (!count) {\n            count = 10;\n        }\n        JSHelper.playEffect(\"reward_normal\", false, true);\n        let num = 0;\n        for (let index = 0; index < count; index++) {\n            let goodsNodeName = \"imgMoney\"\n            if (coinType == 2) {\n                goodsNodeName = \"imgGold\"\n            } else if (coinType == 3) {\n                goodsNodeName = \"imgMyd\"\n\n            }\n            let goodsNode: cc.Node = MKUtils.findNodeByName(cc.director.getScene(), goodsNodeName)\n            if (goodsNode) {\n                let node = new cc.Node()\n                let sprite = node.addComponent(cc.Sprite)\n\n                let imgUrl = \"texture/common/icon_money\"\n                if (coinType == 2) {\n                    imgUrl = \"texture/common/icon_gold\"\n                } else if (coinType == 3) {\n                    imgUrl = \"texture/common/icon_myd\"\n\n                }\n                MKUtils.loadSpriteFrame(imgUrl, function (spriteFrame) {\n                    sprite.spriteFrame = spriteFrame\n                    cc.director.getScene().addChild(node, 200)\n                    node.setPosition(startPos)\n\n                    let scale = MKUtils.randomNMF(0.8, 1.2)\n                    node.setScale(scale)\n\n                    let endWorldPos = goodsNode.convertToWorldSpaceAR(cc.v2(0, 0))\n                    let endNodePos = endWorldPos\n                    let dis = MKUtils.twoPointDistance(endNodePos, node.getPosition())\n                    if (coinType == 1) {\n                        let xPos = MKUtils.randomNM(-200, 200)\n                        let yPos = MKUtils.randomNM(-200, 200)\n                        let xPos1 = MKUtils.randomNM(-200, 200)\n                        let yPos1 = MKUtils.randomNM(-200, 200)\n                        let bezier = [cc.v2(startPos.x + xPos, startPos.y + yPos), cc.v2(endNodePos.x + xPos1, endNodePos.y + yPos1), endNodePos];\n                        node.runAction(cc.sequence(\n                            cc.moveBy(0.2, cc.v2(-5, 5)).easing(cc.easeOut(4.0)),\n                            cc.delayTime(0.2),\n                            cc.bezierTo(dis / 800, bezier).easing(cc.easeOut(1.0)),\n                            cc.scaleTo(0.1, 1.2),\n                            cc.scaleTo(0.1, 1),\n                            cc.callFunc(() => {\n                                if (index == count - 1) {\n                                    cb && cb();\n                                    EventDispath.send(EventType.UPDATE_MONEY, moneyNum);\n                                }\n                            }),\n                            cc.destroySelf()\n                        ))\n                    } else {\n                        let xPos = MKUtils.randomNM(-100, 100)\n                        let yPos = MKUtils.randomNM(-100, 100)\n                        num++;\n                        let delayTime = 0.1 + num * 0.05;\n                        node.runAction(cc.sequence(\n                            cc.moveBy(0.4, cc.v2(xPos, yPos)).easing(cc.easeOut(4.0)),\n                            cc.delayTime(delayTime),\n                            cc.moveTo(dis / 1500, endNodePos).easing(cc.easeOut(1.0)),\n                            cc.scaleTo(0.1, 1.2),\n                            cc.scaleTo(0.1, 1),\n                            cc.callFunc(() => {\n                                if (index == count - 1) {\n                                    cb && cb();\n                                    if (coinType == 2) EventDispath.send(EventType.UPDATE_GOLD, moneyNum);\n                                    else EventDispath.send(EventType.UPDATE_ACCET_DEGREE);\n                                }\n                            }),\n                            cc.destroySelf()\n                        ))\n                    }\n                }.bind(this))\n            }\n        }\n    }\n}\n\nexport default EffectManager.instance();\n"]}