{"version":3,"sources":["assets/src/framework/tools/Utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export default class Utils {\n    // cdegress:Num Math.PI/180,\n    // cangle:180/Math.PI,\n\n    static emoji2Str(str) {\n        return unescape(escape(str).replace(/\\%uD.{3}/g, ''));\n    }\n\n    static isEmojiCharacter(substring) {\n        for (let i = 0; i < substring.length; i++) {\n            let hs = substring.charCodeAt(i);\n            let ls;\n            if (0xd800 <= hs && hs <= 0xdbff) {\n                if (substring.length > 1) {\n                    ls = substring.charCodeAt(i + 1);\n                    let uc = ((hs - 0xd800) * 0x400) + (ls - 0xdc00) + 0x10000;\n                    if (0x1d000 <= uc && uc <= 0x1f77f) {\n                        return true;\n                    }\n                }\n            } else if (substring.length > 1) {\n                ls = substring.charCodeAt(i + 1);\n                if (ls == 0x20e3) {\n                    return true;\n                }\n            } else {\n                if (0x2100 <= hs && hs <= 0x27ff) {\n                    return true;\n                } else if (0x2B05 <= hs && hs <= 0x2b07) {\n                    return true;\n                } else if (0x2934 <= hs && hs <= 0x2935) {\n                    return true;\n                } else if (0x3297 <= hs && hs <= 0x3299) {\n                    return true;\n                } else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030\n                    || hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b1b\n                    || hs == 0x2b50) {\n                    return true;\n                }\n            }\n        }\n    }\n\n    //是否字符串有空格\n    static isStrSpace(str) {\n        return str.indexOf(' ') === -1;\n    }\n\n    //角度转弧度\n    static angleToPI(degrees) {\n        return degrees * cc.macro.RAD;\n    }\n\n    static piToAngle(radians) {\n        return radians * cc.macro.DEG;\n    }\n\n    //获得两点之间的角度\n    static getVecAngle(currVec, nextVec) {\n        // let p1 = (180 / Math.PI);\n        let vec = cc.v2(nextVec).sub(cc.v2(currVec));\n        let a1 = -Math.atan2(vec.y, vec.x);\n        let r1 = a1 * cc.macro.DEG;\n        return r1;\n    }\n\n    //把一个节点下的坐标转成全局坐标\n    static convertNodeToWorldSpace(node: cc.Node, npos) {\n        if (cc.isValid(node)) {\n            return node.convertToWorldSpaceAR(npos);\n        }\n        return cc.v2();\n    }\n\n    //把一个节点下的坐标转成另一个节点的坐标\n    static convertNodeToNodeSpace(node, targetParent) {\n        if (cc.isValid(node)) {\n            if (!!node.parent) {\n                let wpos = node.parent.convertToWorldSpaceAR(node.getPosition());\n\n                if (cc.isValid(targetParent)) {\n                    return targetParent.convertToNodeSpaceAR(wpos);\n                }\n            }\n        }\n        cc.log('坐标转换有问题');\n        return cc.v2(0, 0);\n    }\n\n    //把全局坐标转成另一个节点的坐标\n    static convertWorldToNodeSpace(node, wpos, isParent) {\n        if (cc.isValid(node)) {\n            if (!!isParent && node.parent) {\n                return node.parent.convertToNodeSpaceAR(wpos);\n            }\n            return node.convertToNodeSpaceAR(wpos);\n        }\n        return cc.v2(0, 0);\n    }\n\n    /**\n     * Function name isPhoneNumer\n     * @param phoneNum 电话号码\n     * 判断传入的数字是否符合手机号码的格式\n     */\n    static isPhonenumber(phoneNum) {\n        if (!(/^1[34578]\\d{9}$/.test(phoneNum))) {\n            return false;\n        }\n        return true;\n    }\n    /**\n    * Function name getShortName\n    * @param name 玩家昵称\n    * 玩家中文昵称最多只显示5个汉字，超出则在后面加“...” 一个中文2个字符\n    */\n    static getShortName(name, maxChar: number = 10) {\n        if (!name) {\n            return \"\";\n        }\n        let strlen = 0;\n        let s = \"\";\n        for (let i = 0; i < name.length; i++) {\n            if (name.charCodeAt(i) > 128) {\n                strlen += 2;\n            } else {\n                strlen++;\n            }\n            s += name.charAt(i);\n            if (strlen >= maxChar) {\n                return s + \"...\";\n            }\n        }\n        return s;\n    }\n\n    /**\n     * 计算两点之间的中点,\n     * coefficient 距离系数\n     */\n    static calculationMidPoint(begianPos: cc.Vec2, endPos: cc.Vec2, coefficient: number = 0.5, offsetY: number = 300) {\n        let newPos = begianPos;\n        let subx: number = 0;\n        let suby: number = 0;\n        if (begianPos.x <= endPos.x && begianPos.y <= endPos.y) {\n            subx = endPos.x - begianPos.x;\n            suby = endPos.y - begianPos.y;\n            newPos = cc.v2(begianPos.x + subx * coefficient, begianPos.y + suby * coefficient + offsetY);\n        } else if (begianPos.x > endPos.x && begianPos.y < endPos.y) {\n            subx = endPos.x - begianPos.x;\n            suby = endPos.y - begianPos.y;\n            newPos = cc.v2(begianPos.x + subx * coefficient, begianPos.y + suby * coefficient + offsetY);\n        } else if (begianPos.x > endPos.x && begianPos.y > endPos.y) {\n            subx = endPos.x - begianPos.x;\n            suby = endPos.y - begianPos.y;\n            newPos = cc.v2(begianPos.x + subx * coefficient, begianPos.y + suby * coefficient + offsetY);\n        } else if (begianPos.x < endPos.x && begianPos.y > endPos.y) {\n            subx = endPos.x - begianPos.x;\n            suby = endPos.y - begianPos.y;\n            newPos = cc.v2(begianPos.x + subx * coefficient, begianPos.y + suby * coefficient + offsetY);\n        }\n        return newPos;\n    }\n\n\n    //生成范围内的随机数\n    static randSectionNum(minnum, maxnum): number {\n        return Math.floor(minnum + Math.random() * (maxnum - minnum));\n    }\n    //获得数组内的随机值\n    static getRandomByArr(arr) {\n        let index = this.randSectionNum(0, arr.length);\n        return arr[index];\n    }\n    //生成区间内的数组\n    static createArr(startIndex, endIndex) {\n        let arr = [];\n        for (let index = startIndex; index < endIndex; index++) {\n            arr.push(index);\n        }\n        return arr;\n    }\n\n    /**\n    * 从指定数组随机出几个值并组成新数组(返回值为原元素类型)\n    * @param arr:源数组\n    * @param num:要几个随机元素\n    */\n    static randomNewArr(arr: Array<any>, num: number) {\n        let arrOld: Array<any> = new Array<any>();\n        arrOld = [...arr];\n        if (arrOld.length <= num) {\n            return arrOld;\n        }\n        let arrNew: Array<any> = new Array<any>();\n        for (let i = 0; i < num; i++) {\n            let random = this.getRandomNum(0, arrOld.length - 1);//产生随机数用作下标 \n            arrNew.push(arrOld[random]);\n            arrOld.splice(random, 1);\n        }\n        return arrNew;\n    }\n    /**\n     * 获取范围内随机整数(包含最大值)\n     * @param min 最小值\n     * @param max 最大值\n     */\n    static getRandomNum(min: number, max: number): number {\n        return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n\n\n    static crossMul(v1: cc.Vec2, v2: cc.Vec2) {\n        return v1.x * v2.y - v1.y * v2.x;\n    }\n\n\n    static quadratic(begin, c1, end, t) {\n        let p = cc.v2();\n        p.x = begin.x * (1 - t) * (1 - t) + c1.x * 2 * t * (1 - t) + end.x * t * t;\n        p.y = begin.y * (1 - t) * (1 - t) + c1.y * 2 * t * (1 - t) + end.y * t * t;\n        return p;\n    }\n\n\n    static exchange(p1: cc.Vec2, p2: cc.Vec2) {\n        let p = cc.v2();\n        p.x = p2.x;\n        p.y = p2.y;\n        p2.x = p1.x;\n        p2.y = p1.y;\n        p1.x = p.x;\n        p1.y = p.y;\n    }\n\n    //数组删除某一个索引的对象\n    //index 开始索引\n    //num 删除数量 默认为1个\n    static arrayRemove(arr: Array<any>, index, num = 1) {\n        let i, len;\n        for (i = index + num, len = arr.length; i < len; i++) {\n            arr[i - num] = arr[i];\n        }\n        arr.length = len - num;\n    }\n\n    //通过数组中的值移除数组\n    static arrayRemoveValue(arr: Array<number | string>, value: string | number) {\n        for (let index = 0; index < arr.length; index++) {\n            const element = arr[index];\n            if (element === value) {\n                this.arrayRemove(arr, index);\n                break;\n            }\n        }\n    }\n\n    //数组copy\n    static arrayCopy(sourceArr: Array<any>, destArr: Array<any>) {\n        if (!!sourceArr && !!destArr) {\n            for (let index = 0; index < sourceArr.length; index++) {\n                const element = sourceArr[index];\n                destArr.push(element);\n            }\n        }\n    }\n\n    //从数组中获得指定数量，同时改变原有的数组\n    static arrayGetSync(sourceArr: Array<any>, num: number = 1) {\n        let resultArr = [];\n        if (num > sourceArr.length) {\n            this.arrayCopy(sourceArr, resultArr);\n            sourceArr.length = 0;\n        } else {\n            let dIndex = 0;\n            for (let index = 0; index < num; index++) {\n                dIndex = Math.floor(Math.random() * sourceArr.length);\n                resultArr.push(sourceArr[dIndex]);\n                this.arrayRemove(sourceArr, dIndex, 1);\n            }\n        }\n        return resultArr;\n    }\n\n    //平滑\n    static lerp(a: number, b: number, t: number) {\n        return a + t * (b - a);\n    }\n\n    static matchBgSize(bg: cc.Node) {\n        if (cc.isValid(bg)) {\n            bg.setScale(1, 1);\n            let hvalue = bg.width;\n            if (bg.width <= 0) {\n                hvalue = cc.view.getDesignResolutionSize().width;\n            }\n            let size = cc.view.getVisibleSize();\n            let hrate = size.width / hvalue;\n            bg.setScale(hrate, hrate);\n            return hrate;\n        }\n    }\n\n    static matchBgHSize(bg: cc.Node) {\n        if (cc.isValid(bg)) {\n            bg.setScale(1, 1);\n            let hvalue = bg.height;\n            if (bg.height <= 0) {\n                hvalue = cc.view.getDesignResolutionSize().height;\n            }\n            let size = cc.view.getVisibleSize();\n            let hrate = size.height / hvalue;\n            bg.setScale(hrate, hrate);\n            return hrate;\n        }\n    }\n\n    /**\n     * 把数字转成0101的数组\n     * @param {*} num \n     * @param {*} count \n     */\n    static numberToBinary(num, count) {\n        let arr = [];\n        for (let index = 0; index < count; index++) {\n            arr.push(num >> index & 1);\n        }\n        return arr;\n    }\n\n    /**\n     * \n     * @param {*} arr \n     */\n    static binaryArrToNum(arr) {\n        if (!!arr) {\n            let str = '';\n            for (let index = 0; index < arr.length; index++) {\n                str += arr[index];\n            }\n            cc.log(str);\n            return parseInt(str, 2);\n        }\n        return null;\n    }\n\n    /**\n     * 是否是pc操作平台\n     */\n    static isPcPlantFrom() {\n        if (cc.sys.platform === cc.sys.ANDROID || cc.sys.platform === cc.sys.IPHONE) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * 获得唯一id\n     * @param len \n     * @param radix \n     */\n    static genUuid(len, radix): string {\n        let chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvvxyz'.split('');\n        let uuid = [], i;\n        radix = radix || chars.length;\n\n        if (len) {\n            // Compact form\n            for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];\n        } else {\n            // rfc4122, version 4 form\n            let r;\n\n            // rfc4122 requires these characters\n            uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n            uuid[14] = '4';\n            // Fill in random data.  At i==19 set the high bits of clock sequence as\n            // per rfc4122, sec. 4.1.5\n            for (i = 0; i < 36; i++) {\n                if (!uuid[i]) {\n                    r = 0 | Math.random() * 16;\n                    uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\n                }\n            }\n        }\n        return uuid.join('');\n    }\n\n    /** <p>判断线段是否在矩形内 </p>\n         * 先看线段所在直线是否与矩形相交， \n         * 如果不相交则返回false， \n         * 如果相交， \n         * 则看线段的两个点是否在矩形的同一边（即两点的x(y)坐标都比矩形的小x(y)坐标小，或者大）, \n         * 若在同一边则返回false， \n         * 否则就是相交的情况。\n         * @param linePointX1 线段起始点x坐标 \n         * @param linePointY1 线段起始点y坐标 \n         * @param linePointX2 线段结束点x坐标 \n         * @param linePointY2 线段结束点y坐标 \n         * @param rectangleLeftTopX 矩形左上点x坐标 \n         * @param rectangleLeftTopY 矩形左上点y坐标 \n         * @param rectangleRightBottomX 矩形右下点x坐标 \n         * @param rectangleRightBottomY 矩形右下点y坐标 \n         * @return 是否相交\n         */\n    static isLineIntersectRectangle(linePointX1: number, linePointY1: number, linePointX2: number, linePointY2: number,\n        rectangleLeftTopX: number,\n        rectangleLeftTopY: number,\n        rectangleRightBottomX: number,\n        rectangleRightBottomY: number): boolean {\n        let lineHeight: number = linePointY1 - linePointY2;\n        let lineWidth: number = linePointX2 - linePointX1;  // 计算叉乘 \n        let c: number = linePointX1 * linePointY2 - linePointX2 * linePointY1;\n        if ((lineHeight * rectangleLeftTopX + lineWidth * rectangleLeftTopY + c >= 0 && lineHeight * rectangleRightBottomX + lineWidth * rectangleRightBottomY + c <= 0)\n            || (lineHeight * rectangleLeftTopX + lineWidth * rectangleLeftTopY + c <= 0 && lineHeight * rectangleRightBottomX + lineWidth * rectangleRightBottomY + c >= 0)\n            || (lineHeight * rectangleLeftTopX + lineWidth * rectangleRightBottomY + c >= 0 && lineHeight * rectangleRightBottomX + lineWidth * rectangleLeftTopY + c <= 0)\n            || (lineHeight * rectangleLeftTopX + lineWidth * rectangleRightBottomY + c <= 0 && lineHeight * rectangleRightBottomX + lineWidth * rectangleLeftTopY + c >= 0)) {\n\n            if (rectangleLeftTopX > rectangleRightBottomX) {\n                let temp: number = rectangleLeftTopX;\n                rectangleLeftTopX = rectangleRightBottomX;\n                rectangleRightBottomX = temp;\n            }\n            if (rectangleLeftTopY < rectangleRightBottomY) {\n                let temp1: number = rectangleLeftTopY;\n                rectangleLeftTopY = rectangleRightBottomY;\n                rectangleRightBottomY = temp1;\n            }\n            if ((linePointX1 < rectangleLeftTopX && linePointX2 < rectangleLeftTopX)\n                || (linePointX1 > rectangleRightBottomX && linePointX2 > rectangleRightBottomX)\n                || (linePointY1 > rectangleLeftTopY && linePointY2 > rectangleLeftTopY)\n                || (linePointY1 < rectangleRightBottomY && linePointY2 < rectangleRightBottomY)) {\n                return false;\n            } else {\n                return true;\n            }\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * 由慢到快\n     * @param start \n     * @param end \n     * @param easing \n     * @returns \n     */\n    static easeIn(start: number, end: number, easing: number = 0.1) {\n        start = start - (start - end) * easing;\n        return start;\n    }\n\n    /**\n     * 由快到慢\n     * @param start \n     * @param end \n     * @param easing \n     * @returns \n     */\n    static easeOut(start: number, end: number, easing: number = 0.1) {\n        start = start + (end - start) * easing;\n        return start;\n    }\n\n    /**\n     * 当前数字是否时一个质数\n     * 被1和自己整除\n     * @param num \n     */\n    static isPrime(num: number) {\n        let squrtNum = Math.floor(Math.sqrt(num));\n        for (let index = 2; index < num; index++) {\n            if (num % index == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * 找到距离这个数字最近的质数（质数用于随机分布中）\n     * @param num \n     * @returns \n     */\n    static getPrime(num: number) {\n        while (!this.isPrime(num)) {\n            num++;\n        }\n        return num;\n    }\n\n    static create<T>(C: { new(): T }): T {\n        return new C();\n    }\n\n    /**\n     * 适配节点到相对于舞台的的边角位置\n     * @param node \n     * @param bord \n     * @param offsetX \n     * @param offsetY \n     */\n    static fitToBoard(node: cc.Node, bord: string, offsetX: number = 0, offsetY: number = 0) {\n        let size = cc.view.getVisibleSize();\n\n        if (bord == 'tl') {\n            node.x = -size.width / 2 + node.width / 2 + offsetX;\n            node.y = node.height / 2 - node.height / 2 + offsetY;\n        } else if (bord == 'tr') {\n            node.x = size.width / 2 - node.width / 2 + offsetX;\n            node.y = node.height / 2 - node.height / 2 + offsetY;\n        } else if (bord == 'dl') {\n\n            node.x = -size.width / 2 + node.width / 2 + offsetX;\n            node.y = -node.height / 2 + node.height / 2 + offsetY;\n        } else if (bord == 'dr') {\n            node.x = size.width / 2 - node.width / 2 + offsetX;\n            node.y = -node.height / 2 + node.height / 2 + offsetY;\n        }\n    }\n    /**\n     * 返回帧数用时\n     * @param num\n     */\n    static _FT(num: number) {\n        return num * 0.0333333;\n    }\n    static isUndefined(obj: any) {\n        return typeof obj == \"undefined\";\n    }\n    static numberPlus(num1: number, num2: number): number {\n        return (num1 * 100 + num2 * 100) / 100;\n    }\n    static numberReduce(num1: number, num2: number): number {\n        return (num1 * 100 - num2 * 100) / 100;\n    }\n    static numberMulti(num1: number, num2: number): number {\n        return (num1 * 100 * num2 * 100) / (100 * 100);\n    }\n}\n"]}