{"version":3,"sources":["assets/src/framework/manager/GamePoolManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BasePoolObject from \"../base/BasePoolObject\";\r\n\r\n//游戏对象池 TODO 缓存依附对象的唯一id,重新class 自增id\r\nclass GamePoolManager {\r\n    private poolDic = {};\r\n    private pobjectCaches = [];//实例prefab对象的缓存\r\n    private objectIndex: number = 0;\r\n    private prefabIndex: number = 0;  //prefab的index\r\n    private prePrefabName: string = null;//上一个prefab的名称\r\n    private static _instance: GamePoolManager;\r\n\r\n    static getInstance(): GamePoolManager {\r\n        if (!this._instance) {\r\n            this._instance = new GamePoolManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    //注册的时候 target 支持 class 和 string两种类型\r\n    instance(prefab, target): cc.Node {\r\n        if (!!prefab) {\r\n            let targetId = this._getTargetKey(target);\r\n            if (!targetId) {\r\n                cc.error('实例Prefab没有设置target或者target不是class-->' + prefab.name);\r\n                return null;\r\n            }\r\n\r\n            //优化 查询速度\r\n            if (prefab.name != this.prePrefabName) {\r\n                this.prefabIndex = 0;\r\n                this.prePrefabName = prefab.name;\r\n            }\r\n\r\n            if (!this.poolDic.hasOwnProperty(prefab.name)) {\r\n                this.poolDic[prefab.name] = [];\r\n            }\r\n\r\n            let arr = this.poolDic[prefab.name];\r\n            for (let index = this.prefabIndex; index < arr.length; index++) {\r\n                if (!arr[index].isActive && cc.isValid(arr[index].prefab)) {\r\n                    arr[index].setTarget(targetId);\r\n                    this.prefabIndex = index;\r\n                    return arr[index].prefab;\r\n                }\r\n            }\r\n            let object = this._getObject();\r\n            let instance = cc.instantiate(prefab);\r\n            targetId = this._getTargetKey(instance);\r\n            object.setData(prefab.name, instance, targetId);\r\n            arr.push(object);\r\n            this.prefabIndex = arr.length - 1;\r\n            return instance;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 放回对象身上的某个实例\r\n     * @param target \r\n     * @param node \r\n     */\r\n    putBackItem(target, node) {\r\n        if (!cc.isValid(node)) {\r\n            return;\r\n        }\r\n        let elements = this._getObjectByTarget(target);\r\n        this.prefabIndex = 0;\r\n        if (!!elements) {\r\n            for (let index = 0; index < elements.length; index++) {\r\n                const element = elements[index];\r\n                if (element.isSameNode(node.uuid)) {\r\n                    element.reset();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 回收所有对应的prefab名\r\n     * @param name \r\n     */\r\n    putBackByName(name) {\r\n        if (this.poolDic.hasOwnProperty(name)) {\r\n            this.prefabIndex = 0;\r\n            let elements = this.poolDic[name];\r\n            if (!!elements) {\r\n                for (let index = 0; index < elements.length; index++) {\r\n                    const element = elements[index];\r\n                    element.reset();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    putBackByTarget(target) {\r\n        let elements = this._getObjectByTarget(target);\r\n        this.prefabIndex = 0;\r\n        if (!!elements) {\r\n            for (let index = 0; index < elements.length; index++) {\r\n                const element = elements[index];\r\n                element.reset();\r\n            }\r\n        }\r\n    }\r\n\r\n    clearByTarget(target) {\r\n        let elements = this._getObjectByTarget(target);\r\n        this.prefabIndex = 0;\r\n        if (!!elements) {\r\n            for (let index = 0; index < elements.length; index++) {\r\n                const element = elements[index];\r\n                element.clear();\r\n            }\r\n            elements.length = 0;\r\n            this._resetObjectIndex();\r\n        }\r\n    }\r\n\r\n    //name 是prefab的名称\r\n    clearByName(name) {\r\n        if (this.poolDic.hasOwnProperty(name)) {\r\n            this.prefabIndex = 0;\r\n            let elements = this.poolDic[name];\r\n            if (!!elements) {\r\n                for (let index = 0; index < elements.length; index++) {\r\n                    const element = elements[index];\r\n                    element.clear();\r\n                }\r\n                elements.length = 0;\r\n                this._resetObjectIndex();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param target \r\n     */\r\n    private _getObjectByTarget(target) {\r\n        if (!!target) {\r\n            let results = [];\r\n            let classID = this._getTargetKey(target);\r\n            if (!!classID) {\r\n                for (const key in this.poolDic) {\r\n                    const elements = this.poolDic[key];\r\n                    if (!!elements && elements.length > 0) {\r\n                        for (let index = 0; index < elements.length; index++) {\r\n                            const element = elements[index];\r\n                            const id = element.target;\r\n                            if (classID === id) {\r\n                                results.push(element);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                return results;\r\n            } else {\r\n                cc.error('GamePoolHelper 放回 或者清理时 target 不合法');\r\n            }\r\n\r\n            return null;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //获得需要缓存对象的key\r\n    private _getTargetKey(target) {\r\n        let targetId = null;\r\n        if (!!target) {\r\n            let isStr = cc.js.isString(target);\r\n            if (isStr) {\r\n                targetId = target\r\n            } else {\r\n                if (!!target.uuid) {\r\n                    targetId = target.uuid;\r\n                } else {\r\n                    targetId = cc.js._getClassId(target);\r\n                }\r\n            }\r\n        } else {\r\n            cc.error('GamePoolHelper中缓存对象不存在');\r\n        }\r\n        return targetId;\r\n    }\r\n\r\n    //重置壳子 可用的索引\r\n    private _resetObjectIndex() {\r\n        for (let index = 0; index < this.pobjectCaches.length; index++) {\r\n            const element = this.pobjectCaches[index];\r\n            if (!element.isObjectActive) {\r\n                this.objectIndex = index;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getObject() {\r\n        for (let index = this.objectIndex; index < this.pobjectCaches.length; index++) {\r\n            const element = this.pobjectCaches[index];\r\n            if (!element.isObjectActive) {\r\n                this.objectIndex = index;\r\n                return element;\r\n            }\r\n        }\r\n        let obj = new BasePoolObject();\r\n        this.pobjectCaches.push(obj);\r\n        this.objectIndex = this.pobjectCaches.length - 1;\r\n        return obj;\r\n    }\r\n\r\n    rolePool: cc.NodePool;\r\n    initRolePool(prefab) {\r\n        this.rolePool = new cc.NodePool();\r\n        let initCount = 15;\r\n        for (let i = 0; i < initCount; ++i) {\r\n            let role = cc.instantiate(prefab); // 创建节点\r\n            this.rolePool.put(role); // 通过 put 接口放入对象池\r\n        }\r\n    }\r\n\r\n\r\n    createRole(prefab) {\r\n        let role = null;\r\n        if (this.rolePool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\r\n            role = this.rolePool.get();\r\n        } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\r\n            role = cc.instantiate(prefab);\r\n        }\r\n        return role;\r\n    }\r\n\r\n    putRole(role) {\r\n        this.rolePool.put(role);\r\n    }\r\n}\r\n\r\nexport default GamePoolManager.getInstance();"]}