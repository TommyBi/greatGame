{"version":3,"sources":["assets/src/game/view/main/CashierManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport MKUtils from \"../../../framework/tools/MkUtils\";\r\nimport Utils from \"../../../framework/tools/Utils\";\r\nimport CashierPrefab from \"./CashierPrefab\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass CashierManager {\r\n\r\n    private static _instance: CashierManager;\r\n    public barragePool: cc.NodePool = new cc.NodePool();\r\n\r\n    static instance(): CashierManager {\r\n        if (!this._instance) {\r\n            this._instance = new CashierManager();\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    point = cc.v2(400, -280);\r\n    pointLit = [];\r\n    clonePoints = [];\r\n\r\n    walkRoleList = [];\r\n    roleList = [];\r\n    cashier: CashierPrefab;\r\n    init(cashier: CashierPrefab) {\r\n        this.cashier = cashier;\r\n        for (let i = 0; i < 6; i++) {\r\n            let p = cc.v2(this.point.x + i * 5, this.point.y + i * 5)\r\n            this.pointLit.push(p);\r\n            this.clonePoints.push(p);\r\n        }\r\n    }\r\n\r\n    addRole(role) {\r\n        this.walkRoleList.push(role);\r\n        this.move(role);\r\n    }\r\n    frame = 0;\r\n    update(dt) {\r\n        if (this.isChange) {\r\n            this.isChange = 0;\r\n            for (let i = 0; i < this.walkRoleList.length; i++) {\r\n                this.move(this.walkRoleList[i]);\r\n            }\r\n        }\r\n        // this.frame++;\r\n        // if (this.frame > 3) {\r\n        //     this.frame = 0;\r\n        //     let len = this.walkRoleList.length;\r\n        //     for (let i = 0; i < len; i++) {\r\n        //         let src = this.walkRoleList[i];\r\n        //         let node = src.node;\r\n\r\n        //         let p = this.getSpeed(node.getPosition())\r\n        //         if (node.x > this.clonePoints[0].x) node.x += p[0];\r\n        //         if (node.y > this.clonePoints[0].y) node.y += p[1];\r\n        //         if (this.clonePoints.length > 0) {\r\n        //             if (node.x <= this.clonePoints[0].x && node.y <= this.clonePoints[0].y) {\r\n        //                 this.clonePoints.shift();\r\n        //                 let role = this.walkRoleList.splice(i, 1);\r\n        //                 this.roleList.push(role)\r\n        //             }\r\n        //         } else {\r\n        //             if (node.x <= this.clonePoints[0].x && node.y <= this.clonePoints[0].y) {\r\n        //                 let role = this.walkRoleList.splice(i, 1);\r\n        //                 this.roleList.push(role)\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    getSpeed(point) {\r\n        let angle = Utils.getVecAngle(point, this.clonePoints[0]);\r\n        let radian = Utils.angleToPI(angle);\r\n        let speedX = 5 * Math.cos(radian);\r\n        let speedY = 5 * Math.cos(radian);\r\n        return [speedX, speedY];\r\n    }\r\n    isChange = 0;\r\n    move(role) {\r\n        let p = role.node.getPosition();\r\n        let dis = MKUtils.twoPointDistance(p, this.point)\r\n        role.node.stopAllActions();\r\n        let action = cc.sequence(cc.moveTo(dis / 100, this.clonePoints[0]), cc.callFunc(() => {\r\n            let index = this.walkRoleList.indexOf(role)\r\n            this.walkRoleList.splice(index, 1);\r\n            this.roleList.push(role)\r\n            role.finshAction();\r\n            this.cashier.addRole(role);\r\n            if (this.clonePoints.length > 1) {\r\n                this.isChange = 1;\r\n                this.clonePoints.shift();\r\n            }\r\n        }))\r\n        let newAction = cc.speed(action, role.speed);\r\n        role.node.runAction(newAction)\r\n    }\r\n    updateRole() {\r\n        this.roleList.splice(0, 1);\r\n        if (this.roleList.length < 6 && this.roleList.length > 0 && this.clonePoints.length < 6) {\r\n            this.clonePoints.unshift(this.pointLit[this.roleList.length])\r\n        }\r\n    }\r\n}\r\nexport default CashierManager.instance();\r\n"]}