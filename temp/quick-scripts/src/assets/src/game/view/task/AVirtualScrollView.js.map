{"version":3,"sources":["assets/src/game/view/task/AVirtualScrollView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import AItemRenderer from \"./AItemRenerer\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n/**\r\n * 虚拟滚动视图 扩展cc.ScrollView\r\n * 渲染预制体必需挂载 AItemRenderer子类\r\n * @author slf\r\n */\r\n@ccclass\r\nexport default class AVirtualScrollView extends cc.ScrollView {\r\n    /**渲染预制体必需挂载 AItemRenderer子类 */\r\n    @property({ type: cc.Prefab, serializable: true, displayName: \"渲染预制体\" })\r\n    itemRenderer: cc.Prefab = null;\r\n\r\n    /**子项点击 回调函数  回调作用域*/\r\n    protected callback: Function;\r\n    protected cbThis: any;\r\n\r\n    /**最大渲染预制体 垂直数量 */\r\n    private verticalCount: number;\r\n    /**最大渲染预制体 水平数量 */\r\n    private horizontalCount: number;\r\n    /**预制体宽高 */\r\n    private itemW: number;\r\n    private itemH: number;\r\n    /**定时器 */\r\n    private interval: number;\r\n    /**预制体池 */\r\n    private itemPool: any[];\r\n    /**预制体列表 */\r\n    private itemList: any[];\r\n    /**预制体渲染类列表 */\r\n    private itemRendererList: any[];\r\n    /**数据列表 */\r\n    private dataList: any[];\r\n    /**开始坐标 */\r\n    private startPos: cc.Vec2;\r\n    /**布局*/\r\n    private contentLayout: cc.Layout;\r\n\r\n    private oldIdx: number = 0;\r\n    private newIdx: number = 0;\r\n\r\n    protected onLoad(): void {\r\n        this.itemList = [];\r\n        this.itemPool = [];\r\n        this.itemRendererList = [];\r\n        this.contentLayout = this.content.getComponent(cc.Layout);\r\n        this.contentLayout.enabled = false;\r\n\r\n        //起始位置\r\n        let itemNode: cc.Node = this.itemRenderer.data;\r\n        this.startPos = new cc.Vec2(itemNode.width * itemNode.anchorX + this.contentLayout.paddingLeft, -(itemNode.height * itemNode.anchorY + this.contentLayout.paddingTop));\r\n        //预制体宽高\r\n        this.itemW = itemNode.width + this.contentLayout.spacingX;\r\n        this.itemH = itemNode.height + this.contentLayout.spacingY;\r\n        //垂直、水平最大预制体数量\r\n        this.horizontalCount = Math.ceil(this.node.width / this.itemW) + 1;\r\n        this.verticalCount = Math.ceil(this.node.height / this.itemH) + 1;\r\n\r\n        if (this.contentLayout.type == cc.Layout.Type.GRID) {\r\n            if (this.contentLayout.startAxis == cc.Layout.AxisDirection.HORIZONTAL) {\r\n                this.horizontalCount = Math.floor(this.node.width / this.itemW);\r\n            } else {\r\n                this.verticalCount = Math.floor(this.node.height / this.itemH);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this.dataList = null;\r\n        this.itemList = null;\r\n        this.itemRendererList = null;\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    /**利用cc.ScrollView本身方法 来标记滑动中 */\r\n    setContentPosition(position: cc.Vec2) {\r\n        super.setContentPosition(position);\r\n        ++this.oldIdx;\r\n    }\r\n\r\n    /**\r\n    * 设置列表 子项点击回调\r\n    * 回调会携带当前子项的 data\r\n    * @param cb 回调\r\n    * @param cbT 作用域\r\n    */\r\n    public setTouchItemCallback(cb: Function, cbT: any): void {\r\n        this.callback = cb;\r\n        this.cbThis = cbT;\r\n    }\r\n\r\n    /**选中数据 */\r\n    private onItemTap(data: any): void {\r\n\r\n        this.callback && this.callback.call(this.cbThis, data);\r\n    }\r\n\r\n    /**\r\n     * 刷新数据\r\n     * @param data 数据源 单项|队列\r\n     */\r\n    public refreshData(data: any | any[]): void {\r\n        if (Array.isArray(data)) {\r\n            this.dataList = data;\r\n        } else {\r\n            this.dataList = [data];\r\n        }\r\n\r\n        if (this.interval) {\r\n            clearInterval(this.interval);\r\n        }\r\n        this.clearItem();\r\n\r\n        this.addItem();\r\n        this.refreshContentSize();\r\n        this.interval = setInterval(this.refreshItem.bind(this), 1000 / 10);\r\n    }\r\n\r\n\r\n    /**添加预制体 */\r\n    private addItem(): void {\r\n        let len: number = 0;\r\n        switch (this.contentLayout.type) {\r\n            case cc.Layout.Type.HORIZONTAL:\r\n                len = this.horizontalCount;\r\n                break;\r\n            case cc.Layout.Type.VERTICAL:\r\n                len = this.verticalCount;\r\n                break;\r\n            case cc.Layout.Type.GRID:\r\n                len = this.horizontalCount * this.verticalCount;\r\n                break;\r\n        }\r\n        len = Math.min(len, this.dataList.length);\r\n\r\n        let itemListLen = this.itemList.length;\r\n        if (itemListLen < len) {\r\n            let itemRenderer = null;\r\n            for (var i = itemListLen; i < len; i++) {\r\n                let child = this.itemPool.length > 0 ? this.itemPool.shift() : cc.instantiate(this.itemRenderer);\r\n                this.content.addChild(child);\r\n                this.itemList.push(child);\r\n                itemRenderer = child.getComponent(AItemRenderer);\r\n                this.itemRendererList.push(itemRenderer);\r\n                if (!this.isFirst) {\r\n                    itemRenderer.data = this.dataList[i];\r\n                }\r\n\r\n                if (itemRenderer.isClick) {\r\n                    itemRenderer.setTouchCallback(this.onItemTap, this);\r\n                }\r\n            }\r\n        } else {\r\n            let cL: number = this.content.childrenCount;\r\n            let item;\r\n            while (cL > len) {\r\n                item = this.itemList[cL - 1];\r\n                this.content.removeChild(item);\r\n                this.itemList.splice(cL - 1, 1);\r\n                this.itemRendererList.splice(cL - 1, 1);\r\n                this.itemPool.push(item);\r\n                cL = this.content.childrenCount;\r\n            }\r\n        }\r\n    }\r\n    clearItem() {\r\n        for (let i = 0; i < this.itemList.length; i++) {\r\n            let item = this.itemList[i];\r\n            this.content.removeChild(item);\r\n            this.itemPool.push(item);\r\n        }\r\n        this.itemList = [];\r\n        this.itemRendererList = [];\r\n    }\r\n\r\n    /**根据数据数量 改变content宽高 */\r\n    private refreshContentSize(): void {\r\n        let layout: cc.Layout = this.contentLayout;\r\n        let dataListLen: number = this.dataList.length;\r\n        switch (this.contentLayout.type) {\r\n            case cc.Layout.Type.VERTICAL:\r\n                this.content.height = layout.paddingTop + dataListLen * this.itemH + layout.paddingBottom;\r\n                break;\r\n            case cc.Layout.Type.HORIZONTAL:\r\n                this.content.width = layout.paddingLeft + dataListLen * this.itemW + layout.paddingRight;\r\n                break;\r\n            case cc.Layout.Type.GRID:\r\n                if (this.contentLayout.startAxis == cc.Layout.AxisDirection.HORIZONTAL) {\r\n                    this.content.height = layout.paddingTop + Math.ceil(dataListLen / this.horizontalCount) * this.itemH + layout.paddingBottom;\r\n                } else if (this.contentLayout.startAxis == cc.Layout.AxisDirection.VERTICAL) {\r\n                    this.content.width = layout.paddingLeft + Math.ceil(dataListLen / this.verticalCount) * this.itemW + layout.paddingRight;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    isFirst = true;\r\n    /**刷新预制体位置 和 数据填充 */\r\n    private refreshItem(): void {\r\n        if (this.oldIdx == this.newIdx) {\r\n            return;\r\n        }\r\n        this.isFirst = false;\r\n        this.newIdx = this.oldIdx;\r\n        switch (this.contentLayout.type) {\r\n            case cc.Layout.Type.HORIZONTAL:\r\n                this.refreshHorizontal();\r\n                break;\r\n            case cc.Layout.Type.VERTICAL:\r\n                this.refreshVertical();\r\n                break;\r\n            case cc.Layout.Type.GRID:\r\n                this.refreshGrid();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**刷新水平 */\r\n    private refreshHorizontal() {\r\n        let start = Math.floor(Math.abs(this.getContentPosition().x) / this.itemW);\r\n        if (start < 0 || this.getContentPosition().x > 0) {                //超出边界处理\r\n            start = 0;\r\n        }\r\n        let end = start + this.horizontalCount;\r\n        if (end > this.dataList.length) {//超出边界处理\r\n            end = this.dataList.length;\r\n            start = Math.max(end - this.horizontalCount, 0);\r\n        }\r\n        let tempV = 0;\r\n        let itemListLen = this.itemList.length;\r\n        let item, idx;\r\n        for (var i = 0; i < itemListLen; i++) {\r\n            idx = (start + i) % itemListLen;\r\n            item = this.itemList[idx];\r\n            tempV = this.startPos.x + ((start + i) * this.itemW);\r\n            if (item.x != tempV) {\r\n                item.x = tempV;\r\n                this.itemRendererList[idx].index = i;\r\n                this.itemRendererList[idx].data = this.dataList[start + i];\r\n                // console.log(\"修改的数据=\" + (start + this.itemRendererList[idx].data))\r\n            }\r\n        }\r\n    }\r\n\r\n    /**刷新垂直 */\r\n    private refreshVertical(): void {\r\n        let start = Math.floor(Math.abs(this.getContentPosition().y) / this.itemH);\r\n        if (start < 0 || this.getContentPosition().y < 0) {\r\n            start = 0;\r\n        }\r\n\r\n        let end = start + this.verticalCount;\r\n        if (end > this.dataList.length) {\r\n            end = this.dataList.length;\r\n            start = Math.max(end - this.verticalCount, 0);\r\n        }\r\n\r\n        let tempV = 0;\r\n        let itemListLen = this.itemList.length;\r\n        let item, idx;\r\n        for (var i = 0; i < itemListLen; i++) {\r\n            idx = (start + i) % itemListLen;\r\n            item = this.itemList[idx];\r\n            tempV = this.startPos.y + (-(start + i) * this.itemH);\r\n            if (item.y != tempV) {\r\n                // console.log(\"修改的数据=\" + (start + i))\r\n                item.y = tempV;\r\n                this.itemRendererList[idx].index = i;\r\n                this.itemRendererList[idx].data = this.dataList[start + i];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**刷新网格 */\r\n    private refreshGrid(): void {\r\n        //是否垂直方向 添加网格\r\n        let isVDirection = this.contentLayout.startAxis == cc.Layout.AxisDirection.VERTICAL;\r\n        let start = Math.floor(Math.abs(this.getContentPosition().y) / this.itemH) * this.horizontalCount;\r\n        if (isVDirection) {\r\n            start = Math.floor(Math.abs(this.getContentPosition().x) / this.itemW) * this.verticalCount;\r\n            if (this.getContentPosition().x > 0) {\r\n                start = 0;\r\n            }\r\n        } else if (this.getContentPosition().y < 0) {\r\n            start = 0;\r\n        }\r\n\r\n        if (start < 0) {\r\n            start = 0;\r\n        }\r\n\r\n        let end = start + this.horizontalCount * this.verticalCount;\r\n        if (end > this.dataList.length) {\r\n            end = this.dataList.length;\r\n            start = Math.max(end - this.horizontalCount * this.verticalCount, 0);\r\n        }\r\n\r\n        let tempX = 0;\r\n        let tempY = 0;\r\n        let itemListLen = this.itemList.length;\r\n        let item, idx;\r\n        for (var i = 0; i < itemListLen; i++) {\r\n            idx = (start + i) % itemListLen;\r\n            item = this.itemList[idx];\r\n            if (isVDirection) {\r\n                tempX = this.startPos.x + (Math.floor((start + i) / this.verticalCount)) * this.itemW;\r\n                tempY = this.startPos.y + -((start + i) % this.verticalCount) * this.itemH;\r\n            } else {\r\n                tempX = this.startPos.x + ((start + i) % this.horizontalCount) * this.itemW;\r\n                tempY = this.startPos.y + -(Math.floor((start + i) / this.horizontalCount)) * this.itemH;\r\n            }\r\n\r\n            if (item.y != tempY || item.x != tempX) {\r\n                // console.log(\"修改的数据=\" + (start + i))\r\n                item.x = tempX;\r\n                item.y = tempY;\r\n                this.itemRendererList[idx].index = i;\r\n                this.itemRendererList[idx].data = this.dataList[start + i];\r\n            }\r\n        }\r\n    }\r\n\r\n    getItemByIndex(index) {\r\n        return this.itemList[index];\r\n    }\r\n}\r\n"]}