{"version":3,"sources":["assets/src/game/manager/EffectManager.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAuD;AACvD,iEAA4D;AAC5D,qEAAgE;AAChE,+DAA8D;AAC9D,yDAAoD;AAEpD;IAGI;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAEM,sBAAQ,GAAf;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YAEjB,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;SACxC;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAE1B,CAAC;IAIO,4BAAI,GAAZ;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAA;YACxB,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;YAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SAC3B;IACL,CAAC;IAED,+BAAO,GAAP;QACI,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAE,CAAA;YACpB,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;YAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SAC3B;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,gCAAQ,GAAR,UAAS,QAAQ,EAAE,EAAE,EAAE,KAAM,EAAE,EAAa;QACxC,IAAI,CAAC,KAAK,EAAE;YACR,KAAK,GAAG,CAAC,CAAC;SACb;QACD,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,QAAQ,GAAG,EAAE,CAAC;gCAET,KAAK;YACV,IAAI,aAAa,GAAG,WAAW,CAAA;YAC/B,IAAI,SAAS,GAAY,iBAAO,CAAC,cAAc,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,aAAa,CAAC,CAAA;YACtF,IAAI,SAAS,EAAE;gBACX,IAAI,MAAI,GAAG,OAAK,OAAO,EAAE,CAAC;gBAC1B,IAAI,QAAM,GAAG,MAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;gBACzC,QAAQ,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC;gBAEpB,IAAI,MAAM,GAAG,6BAA2B,EAAI,CAAA;gBAC5C,iBAAO,CAAC,eAAe,CAAC,MAAM,EAAE,UAAU,WAAW;oBACjD,QAAM,CAAC,WAAW,GAAG,WAAW,CAAA;oBAChC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,MAAI,EAAE,GAAG,CAAC,CAAA;oBAC1C,MAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;oBAG1B,IAAI,KAAK,GAAG,iBAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;oBACrC,MAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;oBAEpB,IAAI,WAAW,GAAG,SAAS,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBAC9D,IAAI,UAAU,GAAG,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;oBAC/D,IAAI,GAAG,GAAG,iBAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAI,CAAC,WAAW,EAAE,CAAC,CAAA;oBAClE,yCAAyC;oBACzC,yCAAyC;oBACzC,0CAA0C;oBAC1C,0CAA0C;oBAC1C,6HAA6H;oBAC7H,8BAA8B;oBAC9B,4DAA4D;oBAC5D,yBAAyB;oBACzB,8DAA8D;oBAC9D,4BAA4B;oBAC5B,0BAA0B;oBAC1B,0BAA0B;oBAC1B,oCAAoC;oBACpC,0BAA0B;oBAC1B,YAAY;oBACZ,UAAU;oBACV,uBAAuB;oBACvB,KAAK;oBACL,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;oBACpC,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;oBAEpC,MAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CACtB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACzD,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,EACzB,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACzD,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EACpB,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAClB,EAAE,CAAC,QAAQ,CAAC;wBACR,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE;4BACpB,EAAE,IAAI,EAAE,EAAE,CAAC;4BACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCACtC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;6BAElC;yBACJ;oBACL,CAAC,CAAC,CAEL,CAAC,CAAA;gBACN,CAAC,CAAC,IAAI,QAAM,CAAC,CAAA;aAChB;;;QA7DL,qDAAqD;QACrD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE;oBAAjC,KAAK;SA6Db;IACL,CAAC;IACD,MAAM;IACN,mCAAW,GAAX,UAAY,QAAiB,EAAE,QAAY,EAAE,QAAY,EAAE,KAAc,EAAE,EAAmB;QAA/D,yBAAA,EAAA,YAAY;QAAE,yBAAA,EAAA,YAAY;QAAkB,mBAAA,EAAA,SAAmB;QAC1F,IAAI,CAAC,KAAK,EAAE;YACR,KAAK,GAAG,EAAE,CAAC;SACd;QACD,IAAI,QAAQ,IAAI,CAAC,EAAE;YACf,kBAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;SACvC;aAAM,IAAI,QAAQ,IAAI,CAAC,EAAE;YACtB,kBAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;SACtC;QACD,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,QAAQ,GAAG,EAAE,CAAC;gCACT,KAAK;YACV,IAAI,aAAa,GAAG,UAAU,CAAA;YAC9B,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACf,aAAa,GAAG,SAAS,CAAA;aAC5B;iBAAM,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACtB,aAAa,GAAG,QAAQ,CAAA;aAC3B;YACD,IAAI,SAAS,GAAY,iBAAO,CAAC,cAAc,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,aAAa,CAAC,CAAA;YACtF,IAAI,SAAS,EAAE;gBACX,IAAI,MAAI,GAAG,OAAK,OAAO,EAAE,CAAC;gBAC1B,IAAI,QAAM,GAAG,MAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;gBACzC,QAAQ,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC;gBACpB,IAAI,MAAM,GAAG,2BAA2B,CAAA;gBACxC,IAAI,QAAQ,IAAI,CAAC,EAAE;oBACf,MAAM,GAAG,0BAA0B,CAAA;iBACtC;qBAAM,IAAI,QAAQ,IAAI,CAAC,EAAE;oBACtB,MAAM,GAAG,0BAA0B,CAAA;iBACtC;gBACD,iBAAO,CAAC,eAAe,CAAC,MAAM,EAAE,UAAU,WAAW;oBACjD,QAAM,CAAC,WAAW,GAAG,WAAW,CAAA;oBAChC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,MAAI,EAAE,GAAG,CAAC,CAAA;oBAC1C,MAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;oBAE1B,IAAI,KAAK,GAAG,iBAAO,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;oBACvC,MAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;oBAEpB,IAAI,WAAW,GAAG,SAAS,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBAC9D,IAAI,UAAU,GAAG,WAAW,CAAA;oBAC5B,IAAI,GAAG,GAAG,iBAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAI,CAAC,WAAW,EAAE,CAAC,CAAA;oBAClE,uBAAuB;oBACvB,6CAA6C;oBAC7C,6CAA6C;oBAC7C,8CAA8C;oBAC9C,8CAA8C;oBAC9C,iIAAiI;oBACjI,kCAAkC;oBAClC,gEAAgE;oBAChE,6BAA6B;oBAC7B,kEAAkE;oBAClE,gCAAgC;oBAChC,8BAA8B;oBAC9B,8BAA8B;oBAC9B,wCAAwC;oBACxC,8BAA8B;oBAC9B,uEAAuE;oBACvE,gBAAgB;oBAChB,cAAc;oBACd,2BAA2B;oBAC3B,SAAS;oBACT,WAAW;oBACX,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;oBACtC,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;oBACtC,GAAG,EAAE,CAAC;oBACN,IAAI,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;oBACjC,MAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CACtB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;oBAC5D,0EAA0E;oBAC1E,6DAA6D;oBAC7D,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,EACvB,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACzD,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EACpB,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAClB,EAAE,CAAC,QAAQ,CAAC;wBACR,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE;4BACpB,EAAE,IAAI,EAAE,EAAE,CAAC;4BACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCACtC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;6BAElC;4BACD,IAAI,QAAQ,IAAI,CAAC;gCAAE,sBAAY,CAAC,IAAI,CAAC,qBAAS,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;iCAClE,IAAI,QAAQ,IAAI,CAAC;gCAAE,sBAAY,CAAC,IAAI,CAAC,qBAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;;gCACtE,sBAAY,CAAC,IAAI,CAAC,qBAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;yBAC3D;oBACL,CAAC,CAAC,CACL,CAAC,CAAA;oBACF,IAAI;gBACR,CAAC,CAAC,IAAI,QAAM,CAAC,CAAA;aAChB;;;QA7EL,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE;oBAAjC,KAAK;SA8Eb;IACL,CAAC;IACD,eAAe;IACf,kCAAU,GAAV,UAAW,QAAiB,EAAE,QAAY,EAAE,QAAY,EAAE,KAAc,EAAE,EAAmB;QAA/D,yBAAA,EAAA,YAAY;QAAE,yBAAA,EAAA,YAAY;QAAkB,mBAAA,EAAA,SAAmB;QACzF,IAAI,CAAC,KAAK,EAAE;YACR,KAAK,GAAG,EAAE,CAAC;SACd;QACD,uBAAuB;QACvB,2CAA2C;QAC3C,8BAA8B;QAC9B,0CAA0C;QAC1C,IAAI;QAEJ,QAAQ,GAAG,oBAAU,CAAC,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAC9D,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,IAAI,GAAG,GAAG,CAAC,CAAC;gCACH,KAAK;YACV,IAAI,aAAa,GAAG,UAAU,CAAA;YAC9B,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACf,aAAa,GAAG,SAAS,CAAA;aAC5B;iBAAM,IAAI,QAAQ,IAAI,CAAC,EAAE;gBACtB,aAAa,GAAG,QAAQ,CAAA;aAC3B;YACD,IAAI,SAAS,GAAY,iBAAO,CAAC,cAAc,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,aAAa,CAAC,CAAA;YACtF,IAAI,SAAS,EAAE;gBACX,IAAI,MAAI,GAAG,OAAK,OAAO,EAAE,CAAC;gBAC1B,IAAI,QAAM,GAAG,MAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA;gBACzC,QAAQ,CAAC,IAAI,CAAC,MAAI,CAAC,CAAC;gBACpB,IAAI,MAAM,GAAG,2BAA2B,CAAA;gBACxC,IAAI,QAAQ,IAAI,CAAC,EAAE;oBACf,MAAM,GAAG,0BAA0B,CAAA;iBACtC;qBAAM,IAAI,QAAQ,IAAI,CAAC,EAAE;oBACtB,MAAM,GAAG,0BAA0B,CAAA;iBACtC;gBACD,iBAAO,CAAC,eAAe,CAAC,MAAM,EAAE,UAAU,WAAW;oBACjD,QAAM,CAAC,WAAW,GAAG,WAAW,CAAA;oBAChC,oBAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAI,EAAE,GAAG,CAAC,CAAA;oBACvC,MAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;oBAE1B,IAAI,KAAK,GAAG,iBAAO,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;oBACvC,MAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;oBAEpB,IAAI,WAAW,GAAG,SAAS,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBAC9D,IAAI,UAAU,GAAG,oBAAU,CAAC,QAAQ,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;oBACvE,IAAI,GAAG,GAAG,iBAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAI,CAAC,WAAW,EAAE,CAAC,CAAA;oBAClE,IAAI,QAAQ,IAAI,CAAC,EAAE;wBACf,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACtC,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACtC,IAAI,KAAK,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACvC,IAAI,KAAK,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACvC,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,EAAE,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,GAAG,KAAK,EAAE,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,UAAU,CAAC,CAAC;wBAC1H,MAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CACtB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACpD,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EACjB,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACtD,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EACpB,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAClB,EAAE,CAAC,QAAQ,CAAC;4BACR,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE;gCACpB,EAAE,IAAI,EAAE,EAAE,CAAC;gCACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCACtC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iCAElC;gCACD,IAAI,QAAQ,IAAI,CAAC;oCAAE,sBAAY,CAAC,IAAI,CAAC,qBAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;;oCACjE,sBAAY,CAAC,IAAI,CAAC,qBAAS,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;6BAC3D;wBACL,CAAC,CAAC,CACL,CAAC,CAAA;qBACL;yBAAM;wBACH,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACtC,IAAI,IAAI,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;wBACtC,GAAG,EAAE,CAAC;wBACN,IAAI,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;wBACjC,MAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CACtB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;wBAC5D,0EAA0E;wBAC1E,6DAA6D;wBAC7D,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,EACvB,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,UAAU,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EACzD,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EACpB,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,EAClB,EAAE,CAAC,QAAQ,CAAC;4BACR,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE;gCACpB,EAAE,IAAI,EAAE,EAAE,CAAC;gCACX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oCACtC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;iCAElC;gCACD,sBAAY,CAAC,IAAI,CAAC,qBAAS,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;6BACvD;wBACL,CAAC,CAAC,CACL,CAAC,CAAA;qBACL;gBACL,CAAC,CAAC,IAAI,QAAM,CAAC,CAAA;aAChB;;;QA/EL,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE;oBAAjC,KAAK;SAgFb;IACL,CAAC;IAED,iCAAS,GAAT,UAAU,IAAa;QACnB,mBAAmB;IACvB,CAAC;IACD,iCAAS,GAAT,UAAU,IAAa;IAEvB,CAAC;IACL,oBAAC;AAAD,CAvTA,AAuTC,IAAA;AAED,kBAAe,aAAa,CAAC,QAAQ,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import JSHelper from \"../../framework/helper/JSHelper\";\r\nimport UIMananger from \"../../framework/manager/UIMananger\";\r\nimport EventDispath from \"../../framework/message/EventDispath\";\r\nimport { EventType } from \"../../framework/message/EventType\";\r\nimport MKUtils from \"../../framework/tools/MkUtils\";\r\n\r\nclass EffectManager {\r\n    private static _instance: EffectManager;\r\n\r\n    constructor() {\r\n        this.init();\r\n    }\r\n\r\n    static instance() {\r\n        if (!this._instance) {\r\n\r\n            this._instance = new EffectManager();\r\n        }\r\n        return this._instance;\r\n\r\n    }\r\n\r\n    nodePool: cc.NodePool;\r\n\r\n    private init() {\r\n        this.nodePool = new cc.NodePool();\r\n        for (let i = 0; i < 100; i++) {\r\n            let node = new cc.Node()\r\n            node.addComponent(cc.Sprite)\r\n            this.nodePool.put(node);\r\n        }\r\n    }\r\n\r\n    getNode() {\r\n        let node = this.nodePool.get();\r\n        if (!node) {\r\n            node = new cc.Node()\r\n            node.addComponent(cc.Sprite)\r\n            this.nodePool.put(node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 植物收获动画\r\n     * @param startPos \r\n     * @param id \r\n     * @param count \r\n     * @param cb \r\n     */\r\n    playCrop(startPos, id, count?, cb?: Function) {\r\n        if (!count) {\r\n            count = 8;\r\n        }\r\n        let self = this;\r\n        let nodeList = [];\r\n        // JSHelper.playEffect(\"reward_normal\", false, true);\r\n        for (let index = 0; index < count; index++) {\r\n            let goodsNodeName = \"warehouse\"\r\n            let goodsNode: cc.Node = MKUtils.findNodeByName(cc.director.getScene(), goodsNodeName)\r\n            if (goodsNode) {\r\n                let node = this.getNode();\r\n                let sprite = node.getComponent(cc.Sprite)\r\n                nodeList.push(node);\r\n\r\n                let imgUrl = `texture/crop/singleIcon/${id}`\r\n                MKUtils.loadSpriteFrame(imgUrl, function (spriteFrame) {\r\n                    sprite.spriteFrame = spriteFrame\r\n                    cc.director.getScene().addChild(node, 200)\r\n                    node.setPosition(startPos)\r\n\r\n\r\n                    let scale = MKUtils.randomNMF(1.5, 2)\r\n                    node.setScale(scale)\r\n\r\n                    let endWorldPos = goodsNode.convertToWorldSpaceAR(cc.v2(0, 0))\r\n                    let endNodePos = cc.v2(endWorldPos.x - 80, endWorldPos.y - 100)\r\n                    let dis = MKUtils.twoPointDistance(endNodePos, node.getPosition())\r\n                    // let xPos = MKUtils.randomNM(-200, 200)\r\n                    // let yPos = MKUtils.randomNM(-200, 200)\r\n                    // let xPos1 = MKUtils.randomNM(-200, 200)\r\n                    // let yPos1 = MKUtils.randomNM(-200, 200)\r\n                    // let bezier = [cc.v2(startPos.x + xPos, startPos.y + yPos), cc.v2(endNodePos.x + xPos1, endNodePos.y + yPos1), endNodePos];\r\n                    // node.runAction(cc.sequence(\r\n                    //     cc.moveBy(0.2, cc.v2(-5, 5)).easing(cc.easeOut(4.0)),\r\n                    //     cc.delayTime(0.2),\r\n                    //     cc.bezierTo(dis / 800, bezier).easing(cc.easeOut(1.0)),\r\n                    //     cc.scaleTo(0.1, 1.2),\r\n                    //     cc.scaleTo(0.1, 1),\r\n                    //     cc.callFunc(() => {\r\n                    //         if (index == count - 1) {\r\n                    //             cb && cb();\r\n                    //         }\r\n                    //     }),\r\n                    //     cc.destroySelf()\r\n                    // ))\r\n                    let xPos = MKUtils.randomNM(-50, 50)\r\n                    let yPos = MKUtils.randomNM(-50, 50)\r\n\r\n                    node.runAction(cc.sequence(\r\n                        cc.moveBy(0.3, cc.v2(xPos, yPos)).easing(cc.easeOut(4.0)),\r\n                        cc.delayTime(0.1 * index),\r\n                        cc.moveTo(dis / 1200, endNodePos).easing(cc.easeOut(1.0)),\r\n                        cc.scaleTo(0.1, 1.2),\r\n                        cc.scaleTo(0.1, 1),\r\n                        cc.callFunc(() => {\r\n                            if (index == count - 1) {\r\n                                cb && cb();\r\n                                for (let i = 0; i < nodeList.length; i++) {\r\n                                    self.nodePool.put(nodeList[i]);\r\n\r\n                                }\r\n                            }\r\n                        }),\r\n                        // cc.destroySelf()\r\n                    ))\r\n                }.bind(this))\r\n            }\r\n        }\r\n    }\r\n    // 飞金币\r\n    playCoinFly(startPos: cc.Vec2, coinType = 1, moneyNum = 0, count?: number, cb: Function = null) {\r\n        if (!count) {\r\n            count = 10;\r\n        }\r\n        if (coinType == 1) {\r\n            JSHelper.playEffect(\"reward_money\");\r\n        } else if (coinType == 2) {\r\n            JSHelper.playEffect(\"reward_gold\");\r\n        }\r\n        let self = this;\r\n        let num = 0;\r\n        let nodeList = [];\r\n        for (let index = 0; index < count; index++) {\r\n            let goodsNodeName = \"imgMoney\"\r\n            if (coinType == 2) {\r\n                goodsNodeName = \"imgGold\"\r\n            } else if (coinType == 3) {\r\n                goodsNodeName = \"imgMyd\"\r\n            }\r\n            let goodsNode: cc.Node = MKUtils.findNodeByName(cc.director.getScene(), goodsNodeName)\r\n            if (goodsNode) {\r\n                let node = this.getNode();\r\n                let sprite = node.getComponent(cc.Sprite)\r\n                nodeList.push(node);\r\n                let imgUrl = \"texture/common/icon_money\"\r\n                if (coinType == 2) {\r\n                    imgUrl = \"texture/common/icon_gold\"\r\n                } else if (coinType == 3) {\r\n                    imgUrl = \"texture/common/icon_xfzs\"\r\n                }\r\n                MKUtils.loadSpriteFrame(imgUrl, function (spriteFrame) {\r\n                    sprite.spriteFrame = spriteFrame\r\n                    cc.director.getScene().addChild(node, 200)\r\n                    node.setPosition(startPos)\r\n\r\n                    let scale = MKUtils.randomNMF(0.8, 1.2)\r\n                    node.setScale(scale)\r\n\r\n                    let endWorldPos = goodsNode.convertToWorldSpaceAR(cc.v2(0, 0))\r\n                    let endNodePos = endWorldPos\r\n                    let dis = MKUtils.twoPointDistance(endNodePos, node.getPosition())\r\n                    // if (coinType == 1) {\r\n                    //     let xPos = MKUtils.randomNM(-200, 200)\r\n                    //     let yPos = MKUtils.randomNM(-200, 200)\r\n                    //     let xPos1 = MKUtils.randomNM(-200, 200)\r\n                    //     let yPos1 = MKUtils.randomNM(-200, 200)\r\n                    //     let bezier = [cc.v2(startPos.x + xPos, startPos.y + yPos), cc.v2(endNodePos.x + xPos1, endNodePos.y + yPos1), endNodePos];\r\n                    //     node.runAction(cc.sequence(\r\n                    //         cc.moveBy(0.2, cc.v2(-5, 5)).easing(cc.easeOut(4.0)),\r\n                    //         cc.delayTime(0.2),\r\n                    //         cc.bezierTo(dis / 800, bezier).easing(cc.easeOut(1.0)),\r\n                    //         cc.scaleTo(0.1, 1.2),\r\n                    //         cc.scaleTo(0.1, 1),\r\n                    //         cc.callFunc(() => {\r\n                    //             if (index == count - 1) {\r\n                    //                 cb && cb();\r\n                    //                 EventDispath.send(EventType.UPDATE_MONEY, moneyNum);\r\n                    //             }\r\n                    //         }),\r\n                    //         cc.destroySelf()\r\n                    //     ))\r\n                    // } else {\r\n                    let xPos = MKUtils.randomNM(-150, 150)\r\n                    let yPos = MKUtils.randomNM(-150, 150)\r\n                    num++;\r\n                    let delayTime = 0.1 + num * 0.05;\r\n                    node.runAction(cc.sequence(\r\n                        cc.moveBy(0.5, cc.v2(xPos, yPos)).easing(cc.easeBackInOut()),\r\n                        // cc.moveBy(delayTime+0.2, cc.v2(xPos, yPos)).easing(cc.easeBackInOut()),\r\n                        // cc.moveBy(0.4, cc.v2(xPos, yPos)).easing(cc.easeOut(4.0)),\r\n                        cc.delayTime(delayTime),\r\n                        cc.moveTo(dis / 1500, endNodePos).easing(cc.easeOut(1.0)),\r\n                        cc.scaleTo(0.1, 1.2),\r\n                        cc.scaleTo(0.1, 1),\r\n                        cc.callFunc(() => {\r\n                            if (index == count - 1) {\r\n                                cb && cb();\r\n                                for (let i = 0; i < nodeList.length; i++) {\r\n                                    self.nodePool.put(nodeList[i]);\r\n\r\n                                }\r\n                                if (coinType == 1) EventDispath.send(EventType.UPDATE_MONEY, moneyNum);\r\n                                else if (coinType == 2) EventDispath.send(EventType.UPDATE_GOLD, moneyNum);\r\n                                else EventDispath.send(EventType.UPDATE_XFZS, moneyNum);\r\n                            }\r\n                        }),\r\n                    ))\r\n                    // }\r\n                }.bind(this))\r\n            }\r\n        }\r\n    }\r\n    // 场景层和UI层中间层特效\r\n    playEffFly(startPos: cc.Vec2, coinType = 2, moneyNum = 0, count?: number, cb: Function = null) {\r\n        if (!count) {\r\n            count = 10;\r\n        }\r\n        // if (coinType == 1) {\r\n        //     JSHelper.playEffect(\"reward_money\");\r\n        // } else if (coinType == 2) {\r\n        //     JSHelper.playEffect(\"reward_gold\");\r\n        // }\r\n\r\n        startPos = UIMananger.effLayer.convertToNodeSpaceAR(startPos);\r\n        let self = this;\r\n        let nodeList = [];\r\n        let num = 0;\r\n        for (let index = 0; index < count; index++) {\r\n            let goodsNodeName = \"imgMoney\"\r\n            if (coinType == 2) {\r\n                goodsNodeName = \"imgGold\"\r\n            } else if (coinType == 3) {\r\n                goodsNodeName = \"imgMyd\"\r\n            }\r\n            let goodsNode: cc.Node = MKUtils.findNodeByName(cc.director.getScene(), goodsNodeName)\r\n            if (goodsNode) {\r\n                let node = this.getNode();\r\n                let sprite = node.getComponent(cc.Sprite)\r\n                nodeList.push(node);\r\n                let imgUrl = \"texture/common/icon_money\"\r\n                if (coinType == 2) {\r\n                    imgUrl = \"texture/common/icon_gold\"\r\n                } else if (coinType == 3) {\r\n                    imgUrl = \"texture/common/icon_xfzs\"\r\n                }\r\n                MKUtils.loadSpriteFrame(imgUrl, function (spriteFrame) {\r\n                    sprite.spriteFrame = spriteFrame\r\n                    UIMananger.effLayer.addChild(node, 200)\r\n                    node.setPosition(startPos)\r\n\r\n                    let scale = MKUtils.randomNMF(0.8, 1.2)\r\n                    node.setScale(scale)\r\n\r\n                    let endWorldPos = goodsNode.convertToWorldSpaceAR(cc.v2(0, 0))\r\n                    let endNodePos = UIMananger.effLayer.convertToNodeSpaceAR(endWorldPos);\r\n                    let dis = MKUtils.twoPointDistance(endNodePos, node.getPosition())\r\n                    if (coinType == 2) {\r\n                        let xPos = MKUtils.randomNM(-200, 200)\r\n                        let yPos = MKUtils.randomNM(-200, 200)\r\n                        let xPos1 = MKUtils.randomNM(-200, 200)\r\n                        let yPos1 = MKUtils.randomNM(-200, 200)\r\n                        let bezier = [cc.v2(startPos.x + xPos, startPos.y + yPos), cc.v2(endNodePos.x + xPos1, endNodePos.y + yPos1), endNodePos];\r\n                        node.runAction(cc.sequence(\r\n                            cc.moveBy(0.2, cc.v2(-5, 5)).easing(cc.easeOut(4.0)),\r\n                            cc.delayTime(0.2),\r\n                            cc.bezierTo(dis / 800, bezier).easing(cc.easeOut(1.0)),\r\n                            cc.scaleTo(0.1, 1.2),\r\n                            cc.scaleTo(0.1, 1),\r\n                            cc.callFunc(() => {\r\n                                if (index == count - 1) {\r\n                                    cb && cb();\r\n                                    for (let i = 0; i < nodeList.length; i++) {\r\n                                        self.nodePool.put(nodeList[i]);\r\n\r\n                                    }\r\n                                    if (coinType == 2) EventDispath.send(EventType.UPDATE_GOLD, moneyNum);\r\n                                    else EventDispath.send(EventType.UPDATE_XFZS, moneyNum);\r\n                                }\r\n                            }),\r\n                        ))\r\n                    } else {\r\n                        let xPos = MKUtils.randomNM(-150, 150)\r\n                        let yPos = MKUtils.randomNM(-150, 150)\r\n                        num++;\r\n                        let delayTime = 0.1 + num * 0.05;\r\n                        node.runAction(cc.sequence(\r\n                            cc.moveBy(0.5, cc.v2(xPos, yPos)).easing(cc.easeBackInOut()),\r\n                            // cc.moveBy(delayTime+0.2, cc.v2(xPos, yPos)).easing(cc.easeBackInOut()),\r\n                            // cc.moveBy(0.4, cc.v2(xPos, yPos)).easing(cc.easeOut(4.0)),\r\n                            cc.delayTime(delayTime),\r\n                            cc.moveTo(dis / 1500, endNodePos).easing(cc.easeOut(1.0)),\r\n                            cc.scaleTo(0.1, 1.2),\r\n                            cc.scaleTo(0.1, 1),\r\n                            cc.callFunc(() => {\r\n                                if (index == count - 1) {\r\n                                    cb && cb();\r\n                                    for (let i = 0; i < nodeList.length; i++) {\r\n                                        self.nodePool.put(nodeList[i]);\r\n\r\n                                    }\r\n                                    EventDispath.send(EventType.UPDATE_MONEY, moneyNum);\r\n                                }\r\n                            }),\r\n                        ))\r\n                    }\r\n                }.bind(this))\r\n            }\r\n        }\r\n    }\r\n\r\n    guidePlay(node: cc.Node) {\r\n        // node.runAction()\r\n    }\r\n    guideStop(node: cc.Node) {\r\n\r\n    }\r\n}\r\n\r\nexport default EffectManager.instance();\r\n"]}