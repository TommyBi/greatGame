{"version":3,"sources":["assets/src/game/manager/ConfigManager.ts"],"names":[],"mappings":";;;;;;AAAA,uEAAkE;AAClE,wDAAmD;AACnD,2CAAsC;AAEtC;IAAA;QAIS,aAAQ,GAAW,EAAE,CAAC,CAAA,YAAY;QACzC,gBAAW,GAAG,CAAC,CAAC;IAyClB,CAAC;IAvCQ,sBAAQ,GAAf;QACE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;SACtC;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,4BAAI,GAAJ;QAAA,iBAMC;QALC,uBAAa,CAAC,UAAU,CAAC,SAAS,EAAE,iBAAO,CAAC,MAAM,CAAC,UAAC,GAAG;YACrD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;YACrC,oBAAoB;QACtB,CAAC,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;IACtB,CAAC;IAEM,uCAAe,GAAtB,UAAuB,IAAI,EAAE,eAAe,EAAE,QAAkB,EAAE,WAAW,EAAE,IAAa,EAAE,OAAiB;QAA/G,iBAuBC;QAtBC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACvB,QAAQ,EAAE,CAAA;YACV,OAAM;SACP;QAED,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC,MAAM,CAAA;YACzC,uDAAuD;YACvD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,uBAAa,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,iBAAO,CAAC,MAAM,CAAC,UAAC,GAAG;oBAC9D,KAAI,CAAC,WAAW,EAAE,CAAA;oBAClB,IAAI,KAAI,CAAC,WAAW,IAAI,CAAC,EAAE;wBACzB,QAAQ,EAAE,CAAA;qBACX;gBACH,CAAC,EAAE,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAA;aACpB;SACF;aAAM;YACL,IAAI,OAAO,GAAG,gBAAM,CAAC,eAAe,GAAG,IAAI,GAAG,MAAM,CAAA;YACpD,IAAI,IAAI,EAAE;gBACR,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,MAAM,CAAA;aAC/B;SACF;IACH,CAAC;IACH,oBAAC;AAAD,CA9CA,AA8CC,IAAA;AAED,kBAAe,aAAa,CAAC,QAAQ,EAAE,CAAC","file":"","sourceRoot":"/","sourcesContent":["import LoaderManager from \"../../framework/manager/LoaderManager\";\nimport Handler from \"../../framework/base/Handler\";\nimport Global from \"../consts/Global\";\n\nclass ConfigManager {\n  private static _instance: ConfigManager;\n\n  private allConfig: any;\n  public gameJson: object = {};//单个游戏json配置\n  jsonLoadNum = 0;\n\n  static instance() {\n    if (!this._instance) {\n      this._instance = new ConfigManager();\n    }\n    return this._instance;\n  }\n\n  init() {\n    LoaderManager.loaderJson('allConf', Handler.create((res) => {\n      this.allConfig = res.json;\n      console.log(\"配置文件：\", this.allConfig);\n      // todo: send event \n    }, this), 'config');\n  }\n\n  public loadGameZipJson(name, jsonStringArray, callback: Function, isLocalJson, path?: String, isRetry?: boolean) {\n    if (this.gameJson[name]) {\n      callback()\n      return\n    }\n\n    if (isLocalJson) {\n      this.jsonLoadNum = jsonStringArray.length\n      // you now have every files contained in the loaded zip\n      for (let i = 0; i < jsonStringArray.length; i++) {\n        LoaderManager.loaderJson(jsonStringArray[i], Handler.create((res) => {\n          this.jsonLoadNum--\n          if (this.jsonLoadNum == 0) {\n            callback()\n          }\n        }, this), 'config')\n      }\n    } else {\n      let fullUrl = Global.JSON_SERVER_URL + name + \".zip\"\n      if (path) {\n        fullUrl = path + name + \".zip\"\n      }\n    }\n  }\n}\n\nexport default ConfigManager.instance();\n"]}