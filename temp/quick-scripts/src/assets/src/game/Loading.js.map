{"version":3,"sources":["assets/src/game/Loading.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Handler from \"../framework/base/Handler\";\r\nimport DataManager from \"../framework/manager/DataManager\";\r\nimport LoaderManager from \"../framework/manager/LoaderManager\";\r\nimport SDKManager from \"../framework/manager/SDKManager\";\r\nimport UIMananger from \"../framework/manager/UIMananger\";\r\nimport NResponer from \"../framework/message/NResponer\";\r\nimport MKUtils from \"../framework/tools/MkUtils\";\r\nimport Global from \"./consts/Global\";\r\nimport LoaderType from \"./consts/LoaderType\";\r\nimport UIType from \"./consts/UIType\";\r\nimport PlayerModel from \"./datas/PlayerModel\";\r\nimport ConfigManager from \"./manager/ConfigManager\";\r\nimport { Message } from \"./view/Message\";\r\n\r\ncc.macro.CLEANUP_IMAGE_CACHE = false;\r\ncc.dynamicAtlasManager.enabled = true;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Loading extends cc.Component {\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    @property(cc.ProgressBar)\r\n    loadingBar: cc.ProgressBar = null;\r\n\r\n    onLoad() {\r\n\r\n        SDKManager.onStartGame(0);\r\n\r\n        LoaderType.initConfig();\r\n        UIType.init();\r\n        NResponer.on(Message.configComplete, Handler.create(() => {\r\n            // UIMananger.showView(UIType.mainView);\r\n        }, this), this);\r\n        ConfigManager.init();\r\n        this.loadingBar.node.active = true;\r\n        this.loadingBar.progress = 0;\r\n        let backup = cc.loader.onProgress;\r\n        cc.loader.onProgress = function (count, amount) {\r\n            this.loadingBar.progress = count / amount;\r\n        }.bind(this);\r\n\r\n        DataManager.init();\r\n\r\n        cc.director.preloadScene(\"main\", () => {\r\n            cc.loader.onProgress = backup;\r\n            this.loadingBar.node.active = false;\r\n            this.initDataSuccess();\r\n        });\r\n        let gameView = UIType.gameView;\r\n        LoaderManager.loaderPrefab(gameView.uname, Handler.create((res) => {\r\n        }, this), gameView.mname);\r\n    }\r\n\r\n    start() {\r\n\r\n        MKUtils.setStatsColor(cc.Color.RED);\r\n\r\n        cc.game.setFrameRate(60);\r\n        this.initData();\r\n        // ConfigManager.loadGameZipJson(\"immotalJsonZip\", Global.JSON_FILE.split(\"|\"), function () {\r\n        //     this.initDataSuccess();\r\n        // }.bind(this), true)\r\n    }\r\n\r\n    private initData() {\r\n        // PlayerModel.loadData();\r\n    }\r\n\r\n    initDataSuccess() {\r\n\r\n        PlayerModel.initUiCfg();\r\n\r\n        PlayerModel.loadData();\r\n        // this.scheduleOnce(() => {\r\n        //     cc.director.loadScene(\"main\");\r\n        // }, 0.1);\r\n        cc.director.loadScene(\"main\");\r\n        console.log(\"查看分辨率\", JSON.stringify(cc.winSize));\r\n    }\r\n    // update (dt) {}\r\n}\r\n"]}